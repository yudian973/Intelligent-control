****************************************
------------- Free ROM Size ------------
Start=0XA    , End=0X4F   , Size=70
Start=0X1C6  , End=0X1FF  , Size=58
Start=0X284  , End=0X2FF  , Size=124
Start=0X321  , End=0X3FF  , Size=223
Start=0X56C  , End=0X7FF  , Size=660
Start=0X80E  , End=0XBFF  , Size=1010
Start=0XC3B  , End=0XCFF  , Size=197
Start=0XD44  , End=0XFFF  , Size=700
Start=0X10F7 , End=0X10FF , Size=9
Start=0X1140 , End=0X114F , Size=16
Start=0X1352 , End=0X13FF , Size=174
Start=0X174B , End=0X17FF , Size=181
----------------------------------------
EM78M611E       |        ROM Size        
----------------+-----------------------
Total           |  6144 x 13 bits(100.0%)
Used            |  2722 x 13 bits( 44.3%)
Free            |  3422 x 13 bits( 55.7%)
----------------------------------------
****************************************
The Checksum is -- 0x8E46
****************************************
--------------- ROM Code ---------------
000000: 1474  	JMP                 MCU_RESET
000001: 0054  	PUSH                              ; save ACC,R3,R4
000002: 0754  	SWAP                A_TEMP         ;A_TEMP
000003: 0703  	SWAPA               0X03           ;STATUS           ;SAVE STATUS(R3)
000004: 0056  	MOV                 STATUS_TEMP,A  ;STATUS_TEMP,A
000005: 0704  	SWAPA               0X04           ;R4              ;SAVE R4(R4)
000006: 0055  	MOV                 RSR_TEMP,A     ;RSR_TEMP,A
000007: 00C3  	CLR                 0X03           ;STATUS           ;SELECT PAGE0
000008: 00C4  	CLR                 RSR
000009: 1450  	JMP                 TCC_INT_STATE
000050: 0000  	NOP
000051: 0C4F  	JBC                 ISR,EP0IF
000052: 1464  	JMP                 USB_EP0_INT
000053: 0CCF  	JBC                 ISR,USBRIF
000054: 146A  	JMP                 USB_RESET_INT
000055: 0C0F  	JBC                 ISR,TCCIF
000056: 1459  	JMP                 RF_CYCLE_INT
000057: 0C8F  	JBC                 ISR,USBSIF
000058: 1468  	JMP                 USB_SUSPEND_INT
000059: 18D1  	MOV                 A,@(256-47)  ; N=47,P=64,f=6MHz ==> T=1ms
00005A: 0041  	MOV                 TCC,A
00005B: 080F  	BC                  ISR,TCCIF
00005C: 055B  	INC                 ComuClock    ; 1ms intrrupt and the master timing
00005D: 0557  	INC                 SystemTimeCNT
00005E: 1880  	MOV                 A,@0X80      ; (test)P57 exchange when intrrupt
00005F: 0345  	XOR                 PORT5,A
000060: 11BD  	CALL                PAGE0BANK1
000061: 0579  	INC                 RX_ComuLoseCNT
000062: 0576  	INC                 KeySystemTimeCNT
000063: 146E  	JMP                 INT_RET
000064: 0BC3  	PAGE                4
000065: 0983  	          BC        0X03,6
000066: 0943  	          BC        0X03,5
000067: 1550  	JMP                 READ_COMMAND ; EP0 Intrrupt flag,wating for Host'CMD
000068: 088F  	BC                  ISR,USBSIF
000069: 146E  	JMP                 INT_RET
00006A: 1801  	MOV                 A,@0X01
00006B: 0071  	MOV                 PROTOCOL_TEMP,A
00006C: 08CF  	BC                  ISR,USBRIF
00006D: 146E  	JMP                 INT_RET
00006E: 0716  	POP                              ; restore ACC,R3,R4
00006F: 0043  	MOV                 0X03,A         ;STATUS,A
000070: 0715  	SWAPA               RSR_TEMP       ;RSR_TEMP       ;R4
000071: 0044  	MOV                 0X04,A         ;R4,A
000072: 0714  	SWAPA               A_TEMP         ;A_TEMP
000073: 0013  	RETI
000074: 0011  	DISI
000075: 18C8  	MOV                 A,@200          ; delay 20ms
000076: 0BC3  	PAGE                5
000077: 0983  	          BC        0X03,6
000078: 0B43  	          BS        0X03,5
000079: 12FC  	CALL                DELAY_X100US
00007A: 09C3  	PAGE                0
00007B: 0983                BC        0X03,6
00007C: 0943                BC        0X03,5
00007D: 0000  	NOP
00007E: 1810  	ClrRamBank
00007F: 0044  	MOV     R4,A
000080: 00C0  	CLR     R0
000081: 0544  	INC     R4
000082: 0D84  	JBC     R4,6
000083: 0B44  	BS      R4,5
000084: 0DC4  	JBC     R4,7
000085: 0B44  	BS      R4,5
000086: 0E83  	JBS     R3,Z
000087: 1480  	JMP     $-7
000088: 00C4  	CLR     R4
000089: 1811  	MOV     A,@0X11
00008A: 004D  	MOV     RD,A
00008B: 00CE  	CLR     RE
00008C: 1801  	MOV     A,@1
00008D: 004D  	MOV     RD,A
00008E: 1800  	MOV     A,@0X00
00008F: 004E  	MOV     RE,A
000090: 004E  	MOV     RE,A
000091: 004E  	MOV     RE,A
000092: 004E  	MOV     RE,A
000093: 004E  	MOV     RE,A
000094: 004E  	MOV     RE,A
000095: 004E  	MOV     RE,A
000096: 004E  	MOV     RE,A
000097: 0B4C  	BS      RC,5
000098: 1830  	MOV                 A,@00110000B    ;set P50 D+/CLOCK, P51 D-/DATA pins input
000099: 0007  	IOW                 IOC7
00009A: 0000  	NOP
00009B: 1804  	MOV                 A,@00000100B
00009C: 0009  	IOW                 IOC9
00009D: 0000  	NOP
00009E: 1800  	MOV                 A,@00000000B
00009F: 0008  	IOW                 IOC8
0000A0: 0000  	NOP
0000A1: 1820  	MOV                 A,@00100000B    ;SET P55 INPUT
0000A2: 0005  	IOW                 IOC5
0000A3: 0000  	NOP
0000A4: 1861  	MOV                 A,@01100001B	;SPI_MISO/PKT_FLAG/FIFO_FLAG -> input port
0000A5: 0006  	IOW                 IOC6
0000A6: 0000  	NOP
0000A7: 18F3  	MOV                 A,@11110011B	;PULL HIGH PORT92,PORT93
0000A8: 000D  	IOW                 IOCD
0000A9: 0000  	NOP
0000AA: 18D0  	MOV                 A,@11010000B	;Disable WDT,PORT (PULL HIGH)
0000AB: 000E  	IOW                 IOCE
0000AC: 0000  	NOP
0000AD: 1801  	MOV                 A,@00000001B	;USB Mode
0000AE: 000A  	IOW                 IOCA
0000AF: 0000  	NOP
0000B0: 1868  	MOV                 A,@01101000B		; Disable WDT, TCC clock source is Main CLK   1:64
0000B1: 0002  	CONTW				                    ; TCC 1MS overflow
0000B2: 00C1  	CLR                 TCC                 ; Clear TCC
0000B3: 00CF  	CLR                 ISR                 ; interrupt flag
0000B4: 1803  	MOV                 A,@00000011B
0000B5: 000F  	IOW                 IMR                 ; enable EP0 interrupt / enable TCC interrupt
0000B6: 0000  	NOP
0000B7: 0B06  	BS                  SPI_SS/8,SPI_SS%8           ; Disable EM198810
0000B8: 0985  	BC                  AT93C46_CS/8,AT93C46_CS%8   ; Disable 93C46
0000B9: 0BC3  	PAGE                5
0000BA: 0983  	          BC        0X03,6
0000BB: 0B43  	          BS        0X03,5
0000BC: 10F9  	CALL                EM198850_RESET          ;initial RF
0000BD: 09C3  	PAGE                0
0000BE: 0983                BC        0X03,6
0000BF: 0943                BC        0X03,5
0000C0: 0B06  	BS                  SPI_SS/8,SPI_SS%8           ; Disable EM198810
0000C1: 0985  	BC                  AT93C46_CS/8,AT93C46_CS%8   ; Disable 93C46	MOV                 A,@0X00
0000C2: 1800  	MOV                 A,@0X00
0000C3: 0055  	MOV                 DataAddressInEEPROM,A
0000C4: 1820  	MOV                 A,@0X20
0000C5: 0054  	MOV                 DataAddressInMCU,A
0000C6: 0414  	mREAD               DataAddressInEEPROM,@1,DataAddressInMCU,@16
0000C7: 0044          MOV     R4,A
0000C8: 0000          NOP
0000C9: 09C4  	          BC        0X04,7
0000CA: 0B84  	          BS        0X04,6
0000CB: 1810          MOV     A,@k
0000CC: 0053          MOV     r_acc3,A
0000CD: 1300  	          CALL      ADDRESS
0000CE: 0615          RRCA    DataAddressInEEPROM
0000CF: 1980          OR      A,@READ
0000D0: 0051          MOV     r_acc1,A      ;高二位为写命令，低六位为地址
0000D1: 1808          MOV     A,@8            ;向93C46写一个字节，控制数
0000D2: 130F  	          CALL      ADDRESS
0000D3: 0886          BC      SPI_CLK/8,SPI_CLK%8
0000D4: 0E15          JBS     DataAddressInEEPROM,0        ;写入8BIT模式时的地址最低位
0000D5: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
0000D6: 0C15          JBC     DataAddressInEEPROM,0
0000D7: 0AC6          BS      SPI_MOSI/8,SPI_MOSI%8
0000D8: 14D9          JMP     $+1
0000D9: 0A86          BS      SPI_CLK/8,SPI_CLK%8
0000DA: 0555          INC     DataAddressInEEPROM          ;地址加1
0000DB: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
0000DC: 14DD          JMP     $+1
0000DD: 0886          BC      SPI_CLK/8,SPI_CLK%8
0000DE: 14DF          JMP     $+1
0000DF: 14E0          JMP     $+1
0000E0: 0A86          BS      SPI_CLK/8,SPI_CLK%8
0000E1: 1808          MOV     A,@8
0000E2: 0052          MOV     r_acc2,A
0000E3: 0886          BC      SPI_CLK/8,SPI_CLK%8
0000E4: 0000          NOP
0000E5: 0000          NOP
0000E6: 0C06          JBC     SPI_MISO/8,SPI_MISO%8
0000E7: 0A03          BS      STATUS,C
0000E8: 0E06          JBS     SPI_MISO/8,SPI_MISO%8
0000E9: 0803          BC      STATUS,C
0000EA: 06C0          RLC     R0
0000EB: 0A86          BS      SPI_CLK/8,SPI_CLK%8
0000EC: 14ED          JMP     $+1
0000ED: 05D2          DJZ     r_acc2
0000EE: 14E3          JMP     $Read_Data2
0000EF: 0544          INC     R4
0000F0: 0000          NOP
0000F1: 0985          BC      AT93C46_CS/8,AT93C46_CS%8
0000F2: 05D3          DJZ     r_acc3
0000F3: 14CD          JMP     $Write_Data
0000F4: 0B06  	BS                  SPI_SS/8,SPI_SS%8           ; Disable EM198810
0000F5: 0985  	BC                  AT93C46_CS/8,AT93C46_CS%8   ; Disable 93C46
0000F6: 11BA  	CALL                PAGE0BANK0                             ; Save ID
0000F7: 0421  	MOV                 A,RX_IDH_Buffer
0000F8: 11BD  	CALL                PAGE0BANK1
0000F9: 0061  	MOV                 RX_IDH,A
0000FA: 11BA  	CALL                PAGE0BANK0
0000FB: 0422  	MOV                 A,RX_IDL_Buffer
0000FC: 11BD  	CALL                PAGE0BANK1
0000FD: 0062  	MOV                 RX_IDL,A
0000FE: 11BA  	CALL                PAGE0BANK0
0000FF: 0427  	MOV                 A,TX1_ID_Buffer
000100: 11BD  	CALL                PAGE0BANK1
000101: 0067  	MOV                 TX1_ID,A
000102: 11BA  	CALL                PAGE0BANK0
000103: 0428  	MOV                 A,TX2_ID_Buffer
000104: 11BD  	CALL                PAGE0BANK1
000105: 0068  	MOV                 TX2_ID,A
000106: 11BA  	CALL                PAGE0BANK0
000107: 0429  	MOV                 A,TX3_ID_Buffer
000108: 11BD  	CALL                PAGE0BANK1
000109: 0069  	MOV                 TX3_ID,A
00010A: 11BA  	CALL                PAGE0BANK0
00010B: 042A  	MOV                 A,TX4_ID_Buffer
00010C: 11BD  	CALL                PAGE0BANK1
00010D: 006A  	MOV                 TX4_ID,A
00010E: 11BA  	CALL                PAGE0BANK0
00010F: 042B  	MOV                 A,TX5_ID_Buffer
000110: 11BD  	CALL                PAGE0BANK1
000111: 006B  	MOV                 TX5_ID,A
000112: 11BA  	CALL                PAGE0BANK0
000113: 042C  	MOV                 A,TX6_ID_Buffer
000114: 11BD  	CALL                PAGE0BANK1
000115: 006C  	MOV                 TX6_ID,A
000116: 11BD  	CALL                PAGE0BANK1
000117: 0421  	MOV                 A,RX_IDH
000118: 0322  	XOR                 A,RX_IDL
000119: 0E83  	JBS                 STATUS,Z
00011A: 151F  	JMP                 Run_Start  ;if RX_IDH!=RX_IDL will jump
00011B: 0422  	MOV                 A,RX_IDL
00011C: 1BFF  	XOR                 A,@0XFF
00011D: 0C83  	JBC                 STATUS,Z   ;if RX_IDH==RX==0xff set EEpromWRStatusFlag
00011E: 0ADE  	BS                  EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
00011F: 0CDE  	JBC                 EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
000120: 1151  	CALL                Rand_ID_Function
000121: 0BC3  	PAGE                5
000122: 0983  	          BC        0X03,6
000123: 0B43  	          BS        0X03,5
000124: 1276  	CALL                Enter_StandbyII_Mode
000125: 12C1  	CALL                CHANGE_ADDRESS_VALUE
000126: 09C3  	PAGE                0
000127: 0983                BC        0X03,6
000128: 0943                BC        0X03,5
000129: 11BA  	CALL                PAGE0BANK0
00012A: 0000  	NOP
00012B: 0010  	ENI
00012C: 00DB  	CLR                 ComuClock
00012D: 00DE  	CLR                 CommuStatusFlag
00012E: 00DF  	CLR                 GeneralStatusFlag2
00012F: 00E3  	CLR                 CHN_FLAG
000130: 00D0  	CLR                 TEMP
000131: 11BD  	CALL                PAGE0BANK1
000132: 0A9F  	BS                  KeyStatusFlag/8,KeyStatusFlag%8
000133: 18FF  	MOV                 A,@0XFF
000134: 0075  	MOV                 KeystokeFlag_Befor,A
000135: 0077  	MOV                 KeystokeTimeCNT,A
000136: 08C9  	BC                  LED1_STATUS/8,LED1_STATUS%8
000137: 1268  	CALL                SearchLinkMode_Set
000138: 0808  	BC                  PORT8,0
000139: 18D1   	MOV                 A,@(256-47)  ; N=94,P=64,f=6MHz ==> T=1ms
00013A: 0041  	MOV                 TCC,A        ; TCC reload by PKT pull high
00013B: 00DB  	CLR                 ComuClock
00013C: 1880  	MOV                 A,@0X80      ; (test)P57 exchange when intrrupt
00013D: 0345  	XOR                 PORT5,A
00013E: 0000   	NOP
00013F: 0BC3  	PAGE                4
000140: 0983  	          BC        0X03,6
000141: 0943  	          BC        0X03,5
000142: 12FC  	CALL                USB_MAIN
000143: 09C3   	PAGE                0
000144: 0983                BC        0X03,6
000145: 0943                BC        0X03,5
000146: 1200  	CALL                SYNC_COM_TX
000147: 09C3  	PAGE                1
000148: 0983  	          BC        0X03,6
000149: 0B43  	          BS        0X03,5
00014A: 1000   	CALL                RX1_FUNCTION
00014B: 10AF   	CALL                RX2_FUNCTION
00014C: 09C3  	PAGE                0
00014D: 0983                BC        0X03,6
00014E: 0943                BC        0X03,5
00014F: 0000  	NOP
000150: 153F  	JMP                 MAIN
000151: 1802  	MOV                 A,@2
000152: 0051  	MOV                 TEMP1,A
000153: 1861  	MOV                 A,@0X61
000154: 0052  	MOV                 TEMP2,A
000155: 1195  	CALL                RAND_FUCTION  ; Creat RX_IDH,RX_IDL
000156: 11BD  	CALL                PAGE0BANK1
000157: 0421  	MOV                 A,RX_IDH
000158: 1BD6  	XOR                 A,@RX_IDH_DEFAULT
000159: 0E83  	JBS                 STATUS,Z
00015A: 1560  	JMP                 Creat_TX_ID
00015B: 0422  	MOV                 A,RX_IDL
00015C: 1BAC  	XOR                 A,@RX_IDL_DEFAULT
00015D: 0E83  	JBS                 STATUS,Z
00015E: 1560  	JMP                 Creat_TX_ID
00015F: 1551  	JMP                 Rand_ID_Function
000160: 18F0  	MOV                 A,@0XF0       ; synthesize TX_IDx
000161: 02A2  	AND                 A,RX_IDL
000162: 0067  	MOV                 TX1_ID,A
000163: 0068  	MOV                 TX2_ID,A
000164: 0069  	MOV                 TX3_ID,A
000165: 006A  	MOV                 TX4_ID,A
000166: 006B  	MOV                 TX5_ID,A
000167: 006C  	MOV                 TX6_ID,A
000168: 1801  	MOV                 A,@0X01
000169: 03E7  	ADD                 TX1_ID,A
00016A: 1802  	MOV                 A,@0X02
00016B: 03E8  	ADD                 TX2_ID,A
00016C: 1803  	MOV                 A,@0X03
00016D: 03E9  	ADD                 TX3_ID,A
00016E: 1804  	MOV                 A,@0X04
00016F: 03EA  	ADD                 TX4_ID,A
000170: 1805  	MOV                 A,@0X05
000171: 03EB  	ADD                 TX5_ID,A
000172: 1806  	MOV                 A,@0X06
000173: 03EC  	ADD                 TX6_ID,A
000174: 11BD  	CALL                PAGE0BANK1   ; write ID to buffer
000175: 0421  	MOV                 A,RX_IDH
000176: 11BA  	CALL                PAGE0BANK0
000177: 0061  	MOV                 RX_IDH_Buffer,A
000178: 11BD  	CALL                PAGE0BANK1
000179: 0422  	MOV                 A,RX_IDL
00017A: 11BA  	CALL                PAGE0BANK0
00017B: 0062  	MOV                 RX_IDL_Buffer,A
00017C: 11BD  	CALL                PAGE0BANK1
00017D: 0427  	MOV                 A,TX1_ID
00017E: 11BA  	CALL                PAGE0BANK0
00017F: 0067  	MOV                 TX1_ID_Buffer,A
000180: 11BD  	CALL                PAGE0BANK1
000181: 0428  	MOV                 A,TX2_ID
000182: 11BA  	CALL                PAGE0BANK0
000183: 0068  	MOV                 TX2_ID_Buffer,A
000184: 11BD  	CALL                PAGE0BANK1
000185: 0429  	MOV                 A,TX3_ID
000186: 11BA  	CALL                PAGE0BANK0
000187: 0069  	MOV                 TX3_ID_Buffer,A
000188: 11BD  	CALL                PAGE0BANK1
000189: 042A  	MOV                 A,TX4_ID
00018A: 11BA  	CALL                PAGE0BANK0
00018B: 006A  	MOV                 TX4_ID_Buffer,A
00018C: 11BD  	CALL                PAGE0BANK1
00018D: 042B  	MOV                 A,TX5_ID
00018E: 11BA  	CALL                PAGE0BANK0
00018F: 006B  	MOV                 TX5_ID_Buffer,A
000190: 11BD  	CALL                PAGE0BANK1
000191: 042C  	MOV                 A,TX6_ID
000192: 11BA  	CALL                PAGE0BANK0
000193: 006C  	MOV                 TX6_ID_Buffer,A
000194: 0012  	RET
000195: 0050  	MOV                 TEMP,A
000196: 0412  	MOV                 A,TEMP2
000197: 03D0  	ADD                 TEMP,A        ; save latest data as current seed
000198: 00C4  	CLR                 RSR
000199: 0400  	MOV                 A,R0
00019A: 03D0  	ADD                 TEMP,A          ; seed
00019B: 11AE  	CALL                ArithmeticIns
00019C: 0544  	INC                 RSR
00019D: 0404  	MOV                 A,RSR
00019E: 1A40  	AND                 A,@0X40         ; adding form 0x00 to bank 0
00019F: 1B40  	XOR                 A,@0X40
0001A0: 0E83  	JBS                 STATUS,Z
0001A1: 1599  	JMP                 RAND_SEED_LOOP1
0001A2: 0400  	MOV                 A,R0
0001A3: 03D0  	ADD                 TEMP,A          ; next seed
0001A4: 0412  	MOV                 A,TEMP2
0001A5: 0044  	MOV                 RSR,A
0001A6: 0410  	MOV                 A,TEMP
0001A7: 0040  	MOV                 R0,A
0001A8: 11AE  	CALL                ArithmeticIns
0001A9: 0552  	INC                 TEMP2
0001AA: 05D1  	DJZ                 TEMP1
0001AB: 15A4  	JMP                 RAND_DATA_LOOP1:
0001AC: 0000  	NOP
0001AD: 0012  	RET
0001AE: 06D0  	RLC         TEMP          ; X*Y+1 MOD Z
0001AF: 06D0  	RLC         TEMP
0001B0: 06D0  	RLC         TEMP
0001B1: 0550  	INC         TEMP
0001B2: 0650  	RRC         TEMP
0001B3: 0650  	RRC         TEMP
0001B4: 0650  	RRC         TEMP
0001B5: 0E03  	JBS         STATUS,C
0001B6: 0810  	BC          TEMP,0
0001B7: 0C03  	JBC         STATUS,C
0001B8: 0A10  	BS          TEMP,0
0001B9: 0012  	RET
0001BA: 09C4  		BC              0X04,7
0001BB: 0984  		BC              0X04,6
0001BC: 0012  	RET
0001BD: 09C4  		BC              0X04,7
0001BE: 0B84  		BS              0X04,6
0001BF: 0012  	RET
0001C0: 0BC4  		BS              0X04,7
0001C1: 0984  		BC              0X04,6
0001C2: 0012  	RET
0001C3: 0BC4  		BS              0X04,7
0001C4: 0B84  		BS              0X04,6
0001C5: 0012  	RET
000200: 00DB  	CLR                 ComuClock
000201: 0004  	WDTC
000202: 0BC3  	PAGE                5
000203: 0983  	          BC        0X03,6
000204: 0B43  	          BS        0X03,5
000205: 11AC  	CALL                Reset_RF_FIFO
000206: 1276  	CALL                Enter_StandbyII_Mode
000207: 12AF  	CALL                RF_FREQ_SET
000208: 0BC3  	PAGE                4
000209: 0983  	          BC        0X03,6
00020A: 0943  	          BC        0X03,5
00020B: 1000   	CALL                CommTypeScan_Func
00020C: 09C3   	PAGE                0
00020D: 0983                BC        0X03,6
00020E: 0943                BC        0X03,5
00020F: 0000   	NOP
000210: 1820  	Clearbuffer
000211: 0044  	MOV                 R4,A
000212: 0004  	WDTC
000213: 00C0  	CLR                 R0
000214: 0544  	INC                 R4
000215: 183F  	MOV                 A,@0B00111111
000216: 0284  	AND                 A,R4
000217: 1B3F  	XOR                 A,@0X3F
000218: 0E83  	JBS                 R3,Z
000219: 1612  	JMP                 $-7
00021A: 00C0  	CLR                 R0
00021B: 00C4  	CLR                 R4
00021C: 041B  	MOV                 A,ComuClock                  ; ComuClock == 6 will continue
00021D: 1D00  	SUB                 A,@0
00021E: 0C03  	JBC                 STATUS,C
00021F: 161C  	JMP                 $-3
000220: 11BA  	CALL                PAGE0BANK0
000221: 1800  	MOV                 A,@0X00
000222: 0060  	MOV                 PID_DATA_Buffer,A            ;PID_DATA
000223: 11BD  	CALL                PAGE0BANK1
000224: 0421  	MOV                 A,RX_IDH
000225: 11BA  	CALL                PAGE0BANK0
000226: 0061  	MOV                 RX_IDH_Buffer,A              ;RX_IDH
000227: 11BD  	CALL                PAGE0BANK1
000228: 0422  	MOV                 A,RX_IDL
000229: 11BA  	CALL                PAGE0BANK0
00022A: 0062  	MOV                 RX_IDL_Buffer,A              ;RX_IDL
00022B: 11BD  	CALL                PAGE0BANK1
00022C: 0423  	MOV                 A,CHN_FLAG
00022D: 11BA  	CALL                PAGE0BANK0
00022E: 0063  	MOV                 CHN_FLAG_Buffer,A            ;CHN_FLAG
00022F: 11BD  	CALL                PAGE0BANK1
000230: 1802  	MOV                 A,@GamePadsSum_Default
000231: 11BA  	CALL                PAGE0BANK0
000232: 0064  	MOV                 GamePadsSum_Buffer,A         ;GamePadsSum
000233: 041E  	MOV                 A,CommuStatusFlag
000234: 0065  	MOV                 CommuStatusFlag_Buffer,A     ;CommuStatusFlag
000235: 11BD  	CALL                PAGE0BANK1
000236: 0425  	MOV                 A,CH_NO
000237: 11BA  	CALL                PAGE0BANK0
000238: 0066  	MOV                 CH_NO_Buffer,A               ;CH_NO
000239: 0D5E  	JBC                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
00023A: 163C  	JMP                 Loading_Forcelink_Data
00023B: 1645  	JMP                 Loading_Communication_Data
00023C: 11BD  	CALL                PAGE0BANK1
00023D: 0427  	MOV                 A,TX1_ID                     ;TX1_ID
00023E: 11BA  	CALL                PAGE0BANK0
00023F: 0067  	MOV                 TX1_ID_Buffer,A
000240: 11BD  	CALL                PAGE0BANK1
000241: 0428  	MOV                 A,TX2_ID                     ;TX2_ID
000242: 11BA  	CALL                PAGE0BANK0
000243: 0068  	MOV                 TX2_ID_Buffer,A
000244: 1651  	JMP                 Loading_Data_End
000245: 11BD  	CALL                PAGE0BANK1
000246: 0432  	MOV                 A,MOTOR_ID
000247: 11BA  	CALL                PAGE0BANK0
000248: 0067  	MOV                 MOTOR_ID_Buffer,A
000249: 11C0  	CALL                PAGE0BANK2
00024A: 043C  	MOV                 A,MOTOR1_VibrInten
00024B: 11BA  	CALL                PAGE0BANK0
00024C: 0068  	MOV                 MOTOR1_VibrInten_Buffer,A
00024D: 11C3  	CALL                PAGE0BANK3
00024E: 043C  	MOV                 A,MOTOR2_VibrInten
00024F: 11BA  	CALL                PAGE0BANK0
000250: 0069  	MOV                 MOTOR2_VibrInten_Buffer,A
000251: 18CD  	MOV                 A,@SetChecksumH
000252: 007E  	MOV                 ChecksumH,A
000253: 18EF  	MOV                 A,@SetChecksumL
000254: 007F  	MOV                 ChecksumL,A
000255: 0000  	NOP
000256: 1807  	MOV                 A,@7
000257: 0BC3  	PAGE                5
000258: 0983  	          BC        0X03,6
000259: 0B43  	          BS        0X03,5
00025A: 12FC  	CALL                DELAY_X100US
00025B: 11CA  	CALL                Enter_TX_Buffer_NACK
00025C: 119A  	CALL                Write_FIFO_RAM
00025D: 09C3  	PAGE                0
00025E: 0983                BC        0X03,6
00025F: 0943                BC        0X03,5
000260: 18D1  	MOV                 A,@(256-47)               ; N=47,P=64,f=4MHz ==> T=1ms
000261: 0041  	MOV                 TCC,A                     ; TCC reload by PKT pull high
000262: 1880  	MOV                 A,@0X80                   ; (test)P57 exchange when intrrupt
000263: 0345  	XOR                 PORT5,A
000264: 00DB  	CLR                 ComuClock                 ; ComuClock = 0
000265: 0000  	NOP
000266: 0012  	RET
000267: 0000  	NOP
000268: 0A1E  	BS                  SearchStatusFlag/8,SearchStatusFlag%8            ;set search mode
000269: 085E  	BC                  NormalStatusFlag/8,NormalStatusFlag%8            ;Clear normal mode
00026A: 08DE  	BC                  EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
00026B: 0B1E  	BS                  LinkModeFlag/8,LinkModeFlag%8
00026C: 095E  	BC                  ForceLinkModeFlag/8,ForceLinkModeFlag%8
00026D: 099E  	BC                  FccTestModeFlag/8,FccTestModeFlag%8
00026E: 0012  	RET
00026F: 081E  	BC                  SearchStatusFlag/8,SearchStatusFlag%8            ;set search mode
000270: 0A5E  	BS                  NormalStatusFlag/8,NormalStatusFlag%8            ;Clear normal mode
000271: 08DE  	BC                  EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
000272: 0B1E  	BS                  LinkModeFlag/8,LinkModeFlag%8
000273: 095E  	BC                  ForceLinkModeFlag/8,ForceLinkModeFlag%8
000274: 099E  	BC                  FccTestModeFlag/8,FccTestModeFlag%8
000275: 0012  	RET
000276: 0A1E  	BS                  SearchStatusFlag/8,SearchStatusFlag%8            ;set search mode
000277: 085E  	BC                  NormalStatusFlag/8,NormalStatusFlag%8            ;Clear normal mode
000278: 08DE  	BC                  EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
000279: 091E  	BC                  LinkModeFlag/8,LinkModeFlag%8
00027A: 0B5E  	BS                  ForceLinkModeFlag/8,ForceLinkModeFlag%8
00027B: 099E  	BC                  FccTestModeFlag/8,FccTestModeFlag%8
00027C: 0012  	RET
00027D: 081E  	BC                  SearchStatusFlag/8,SearchStatusFlag%8            ;set search mode
00027E: 0A5E  	BS                  NormalStatusFlag/8,NormalStatusFlag%8            ;Clear normal mode
00027F: 08DE  	BC                  EEpromWRStatusFlag/8,EEpromWRStatusFlag%8
000280: 091E  	BC                  LinkModeFlag/8,LinkModeFlag%8
000281: 095E  	BC                  ForceLinkModeFlag/8,ForceLinkModeFlag%8
000282: 0B9E  	BS                  FccTestModeFlag/8,FccTestModeFlag%8
000283: 0012  	RET
000300: 09C4  		BANK    @0
000301: 0984                BC        0X04,6
000302: 0985          BC      AT93C46_CS/8,AT93C46_CS%8
000303: 0886          BC      SPI_CLK/8,SPI_CLK%8
000304: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
000305: 1706          JMP     $+1
000306: 1707          JMP     $+1
000307: 0B85          BS      AT93C46_CS/8,AT93C46_CS%8
000308: 1709          JMP     $+1
000309: 170A          JMP     $+1
00030A: 0AC6          BS      SPI_MOSI/8,SPI_MOSI%8       ;PORT6,SPI_MOSI;
00030B: 170C          JMP     $+1
00030C: 170D          JMP     $+1
00030D: 0A86          BS      SPI_CLK/8,SPI_CLK%8
00030E: 0012          RET
00030F: 0059  	MOV     DataShiftCounter,A
000310: 09C4  	BANK    @0
000311: 0984                BC        0X04,6
000312: 0886  	BC      SPI_CLK/8,SPI_CLK%8
000313: 1714  	JMP     $+1
000314: 0803  	bc      status,c
000315: 06D1  	RLC     r_acc1        ;要写入的数据
000316: 0E03  	JBS     STATUS,C
000317: 08C6  	BC      SPI_MOSI/8,SPI_MOSI%8
000318: 0C03  	JBC     STATUS,C
000319: 0AC6  	BS      SPI_MOSI/8,SPI_MOSI%8
00031A: 0000  	NOP
00031B: 0000  	NOP
00031C: 0A86  	BS      SPI_CLK/8,SPI_CLK%8
00031D: 171E  	JMP     $+1
00031E: 05D9  	DJZ     DataShiftCounter
00031F: 1712  	JMP     Rl_Comd1
000320: 0012  	RET                   ;    return
000400: 0004  	WDTC
000401: 0BC3  	PAGE                5
000402: 0983  	          BC        0X03,6
000403: 0B43  	          BS        0X03,5
000404: 11AC  	CALL                RESET_RF_FIFO
000405: 1276  	CALL                Enter_StandbyII_Mode
000406: 120C  	CALL                ENTER_RX_BUFFER_ACK
000407: 09C3  	PAGE                1
000408: 0983  	          BC        0X03,6
000409: 0B43  	          BS        0X03,5
00040A: 041B  	MOV                 A,ComuClock                  ;ComuClock == 4 will continue
00040B: 1D03  	SUB                 A,@3
00040C: 0E03  	JBS                 STATUS,C
00040D: 147A  	JMP                 RX1_Detect_Timeout           ; RX1,Timeout but have not received TX data
00040E: 0F86  	JBS                 PKT_FLAG/8,PKT_FLAG%8	     ; 1:TX data receive finished  0:wating PKT pull high
00040F: 140A  	JMP                 RX1_DETECT_LOOP
000410: 0000  	NOP
000411: 1820  	Clearbuffer
000412: 0044  	MOV                 R4,A
000413: 0004  	WDTC
000414: 00C0  	CLR                 R0
000415: 0544  	INC                 R4
000416: 183F  	MOV                 A,@0B00111111
000417: 0284  	AND                 A,R4
000418: 1B3F  	XOR                 A,@0X3F
000419: 0E83  	JBS                 R3,Z
00041A: 1413  	JMP                 $-7
00041B: 00C0  	CLR                 R0
00041C: 00C4  	CLR                 R4
00041D: 0BC3  	PAGE                5
00041E: 0983  	          BC        0X03,6
00041F: 0B43  	          BS        0X03,5
000420: 1187  	CALL                READ_FIFO_RAM
000421: 1276  	CALL                Enter_StandbyII_Mode
000422: 09C3  	PAGE                1
000423: 0983  	          BC        0X03,6
000424: 0B43  	          BS        0X03,5
000425: 1163  	CALL                PAGE1BANK1
000426: 0421  	MOV                 A,RX_IDH
000427: 1160  	CALL                PAGE1BANK0
000428: 0361  	XOR                 RX_IDH_Buffer,A
000429: 0E83  	JBS                 STATUS,Z
00042A: 1486  	JMP                 LoseFrameStatus_RxTxID1_Error  ; RX_IDH ERROR
00042B: 1163  	CALL                PAGE1BANK1
00042C: 0422  	MOV                 A,RX_IDL
00042D: 1160  	CALL                PAGE1BANK0
00042E: 0362  	XOR                 RX_IDL_Buffer,A
00042F: 0E83  	JBS                 STATUS,Z
000430: 1486  	JMP                 LoseFrameStatus_RxTxID1_Error  ; RX_IDL ERROR
000431: 1163  	CALL                PAGE1BANK1
000432: 0427  	MOV                 A,TX1_ID
000433: 1160  	CALL                PAGE1BANK0
000434: 0367  	XOR                 TX_ID_Buffer,A
000435: 0E83  	JBS                 STATUS,Z
000436: 1486  	JMP                 LoseFrameStatus_RxTxID1_Error  ; TX_ID ERROR
000437: 0000  	NOP
000438: 1160  	CALL                PAGE1BANK0                       ; Save data from buffer to local
000439: 0428  	MOV                 A,DataA_Buffer
00043A: 1166  	CALL                PAGE1BANK2
00043B: 0060  	MOV                 TX1_DATA1,A
00043C: 1160  	CALL                PAGE1BANK0
00043D: 0429  	MOV                 A,DataB_Buffer
00043E: 1166  	CALL                PAGE1BANK2
00043F: 0061  	MOV                 TX1_DATA2,A
000440: 1160  	CALL                PAGE1BANK0
000441: 042A  	MOV                 A,DataC_Buffer
000442: 1166  	CALL                PAGE1BANK2
000443: 0062  	MOV                 TX1_DATA3,A
000444: 1160  	CALL                PAGE1BANK0
000445: 042B  	MOV                 A,DataD_Buffer
000446: 1166  	CALL                PAGE1BANK2
000447: 0063  	MOV                 TX1_DATA4,A
000448: 1160  	CALL                PAGE1BANK0
000449: 042C  	MOV                 A,DataE_Buffer
00044A: 1166  	CALL                PAGE1BANK2
00044B: 0064  	MOV                 TX1_DATA5,A
00044C: 1160  	CALL                PAGE1BANK0
00044D: 042D  	MOV                 A,DataF_Buffer
00044E: 1166  	CALL                PAGE1BANK2
00044F: 0065  	MOV                 TX1_DATA6,A
000450: 1160  	CALL                PAGE1BANK0
000451: 042E  	MOV                 A,DataG_Buffer
000452: 1166  	CALL                PAGE1BANK2
000453: 0066  	MOV                 TX1_DATA7,A
000454: 1160  	CALL                PAGE1BANK0
000455: 042F  	MOV                 A,CMOS_xAxisL_Buffer
000456: 1166  	CALL                PAGE1BANK2
000457: 0071  	MOV                 TX1_CMOS_xAxisL,A          ; CMOS x Axis low byte
000458: 1160  	CALL                PAGE1BANK0
000459: 0430  	MOV                 A,CMOS_yAxisL_Buffer
00045A: 1166  	CALL                PAGE1BANK2
00045B: 0073  	MOV                 TX1_CMOS_yAxisL,A          ; CMOS y Axis low byte
00045C: 1160  	CALL                PAGE1BANK0
00045D: 0431  	MOV                 A,CMOS_yxsAxisH_Buffer
00045E: 1166  	CALL                PAGE1BANK2
00045F: 0074  	MOV                 TX1_CMOS_yxsAxisH,A        ; CMOS point size low byte
000460: 1160  	CALL                PAGE1BANK0
000461: 0432  	MOV                 A,GS_xAxisL_Buffer
000462: 1166  	CALL                PAGE1BANK2
000463: 0076  	MOV                 TX1_GS_xAxisL,A            ; GS x Axis low byte
000464: 1160  	CALL                PAGE1BANK0
000465: 0433  	MOV                 A,GS_yAxisL_Buffer
000466: 1166  	CALL                PAGE1BANK2
000467: 0078  	MOV                 TX1_GS_yAxisL,A            ; GS y Axis low byte
000468: 1160  	CALL                PAGE1BANK0
000469: 0434  	MOV                 A,GS_zAxisL_Buffer
00046A: 1166  	CALL                PAGE1BANK2
00046B: 007A  	MOV                 TX1_GS_zAxisL,A            ; GS z Axis low byte
00046C: 1160  	CALL                PAGE1BANK0
00046D: 0435  	MOV                 A,GS_xyzAxisH_Buffer
00046E: 1166  	CALL                PAGE1BANK2
00046F: 007B  	MOV                 TX1_GS_xyzAxisH,A          ; GS z Axis high byte
000470: 1163  	CALL                PAGE1BANK1
000471: 0A23  	BS                  CHN_FLAG,RX1
000472: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
000473: 149F  	JMP                 EP1_REPORT_RX1
000474: 0C33  	JBC                 CHN_FLAG_TEMP,RX1             ; CHN_FLAG rising edge
000475: 14A6  	JMP                 Clear_RX1_LossframeCNT
000476: 08C9  	BC                  LED1_STATUS/8,LED1_STATUS%8   ;
000477: 00D7  	CLR                 SystemTimeCNT
000478: 14A6  	JMP                 Clear_RX1_LossframeCNT
000479: 0000  	NOP
00047A: 0000  	NOP
00047B: 1163  	CALL                PAGE1BANK1
00047C: 0E23  	JBS                 CHN_FLAG,RX1                              ; Lossframe Status
00047D: 14A6  	JMP                 Clear_RX1_LossframeCNT                    ; if not SearchStatus,it must be in NormalStatus
00047E: 043A  	MOV                 A,RX1_LossframeCNT                        ; result = constant - variable
00047F: 1D05  	SUB                 A,@RX1_LossframeSum                       ;   | result > 0   c=1  variable less than constant
000480: 0C03  	JBC                 STATUS,C	                              ;   | result < 0   c=0  variable more than constant
000481: 1492  	JMP                 Increase_RX1_LossframeCNT
000482: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
000483: 0823  	BC                  CHN_FLAG,RX1
000484: 14A6  	JMP                 Clear_RX1_LossframeCNT
000485: 0000  	NOP
000486: 0000  	NOP
000487: 1163  	CALL                PAGE1BANK1
000488: 0E23  	JBS                 CHN_FLAG,RX1
000489: 14A6  	JMP                 Clear_RX1_LossframeCNT
00048A: 043A  	MOV                 A,RX1_LossframeCNT                       ; RX1_LossframeSum times lossframe
00048B: 1D05  	SUB                 A,@RX1_LossframeSum
00048C: 0C03  	JBC                 STATUS,C
00048D: 1492  	JMP                 Increase_RX1_LossframeCNT
00048E: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
00048F: 0823  	BC                  CHN_FLAG,RX1
000490: 14A6  	JMP                 Clear_RX1_LossframeCNT
000491: 0000  	NOP
000492: 0000  	NOP
000493: 057A  	INC                 RX1_LossframeCNT
000494: 1800  	MOV                 A,@RX1
000495: 0070  	MOV                 EP1_ReportID,A
000496: 0BC3  	PAGE                4
000497: 0983  	          BC        0X03,6
000498: 0943  	          BC        0X03,5
000499: 1316  	CALL                EP1_Report_Default
00049A: 09C3  	PAGE                1
00049B: 0983  	          BC        0X03,6
00049C: 0B43  	          BS        0X03,5
00049D: 14A7  	JMP                 RX1_Over_Judge
00049E: 0000  	NOP
00049F: 0BC3  	PAGE                4
0004A0: 0983  	          BC        0X03,6
0004A1: 0943  	          BC        0X03,5
0004A2: 132A  	CALL                EP1_Report_1st
0004A3: 09C3  	PAGE                1
0004A4: 0983  	          BC        0X03,6
0004A5: 0B43  	          BS        0X03,5
0004A6: 00FA  	CLR                 RX1_LossframeCNT
0004A7: 041B  	MOV                 A,ComuClock                  ; ComuClock == 4 will continue
0004A8: 1D03  	SUB                 A,@3
0004A9: 0C03  	JBC                 STATUS,C
0004AA: 14A7  	JMP                 $-3
0004AB: 0B06  	BS                  SPI_SS/8,SPI_SS%8          ; Dissable RF
0004AC: 0000  	NOP
0004AD: 0012  	RET
0004AE: 0000  	NOP
0004AF: 0004  	WDTC
0004B0: 0BC3  	PAGE                5
0004B1: 0983  	          BC        0X03,6
0004B2: 0B43  	          BS        0X03,5
0004B3: 11AC  	CALL                RESET_RF_FIFO
0004B4: 1276  	CALL                Enter_StandbyII_Mode
0004B5: 120C  	CALL                ENTER_RX_BUFFER_ACK
0004B6: 09C3  	PAGE                1
0004B7: 0983  	          BC        0X03,6
0004B8: 0B43  	          BS        0X03,5
0004B9: 041B  	MOV                 A,ComuClock                  ;ComuClock == 4 will continue
0004BA: 1D07  	SUB                 A,@7
0004BB: 0E03  	JBS                 STATUS,C
0004BC: 1529  	JMP                 RX2_Detect_Timeout           ; RX2,Timeout but have not received TX data
0004BD: 0F86  	JBS                 PKT_FLAG/8,PKT_FLAG%8	     ; 1:TX data receive finished  0:wating PKT pull high
0004BE: 14B9  	JMP                 RX2_DETECT_LOOP
0004BF: 0000  	NOP
0004C0: 1820  	Clearbuffer
0004C1: 0044  	MOV                 R4,A
0004C2: 0004  	WDTC
0004C3: 00C0  	CLR                 R0
0004C4: 0544  	INC                 R4
0004C5: 183F  	MOV                 A,@0B00111111
0004C6: 0284  	AND                 A,R4
0004C7: 1B3F  	XOR                 A,@0X3F
0004C8: 0E83  	JBS                 R3,Z
0004C9: 14C2  	JMP                 $-7
0004CA: 00C0  	CLR                 R0
0004CB: 00C4  	CLR                 R4
0004CC: 0BC3  	PAGE                5
0004CD: 0983  	          BC        0X03,6
0004CE: 0B43  	          BS        0X03,5
0004CF: 1187  	CALL                READ_FIFO_RAM
0004D0: 1276  	CALL                Enter_StandbyII_Mode
0004D1: 09C3  	PAGE                1
0004D2: 0983  	          BC        0X03,6
0004D3: 0B43  	          BS        0X03,5
0004D4: 1163  	CALL                PAGE1BANK1
0004D5: 0421  	MOV                 A,RX_IDH
0004D6: 1160  	CALL                PAGE1BANK0
0004D7: 0361  	XOR                 RX_IDH_Buffer,A
0004D8: 0E83  	JBS                 STATUS,Z
0004D9: 1535  	JMP                 LoseFrameStatus_RxTxID2_Error  ; RX_IDH ERROR
0004DA: 1163  	CALL                PAGE1BANK1
0004DB: 0422  	MOV                 A,RX_IDL
0004DC: 1160  	CALL                PAGE1BANK0
0004DD: 0362  	XOR                 RX_IDL_Buffer,A
0004DE: 0E83  	JBS                 STATUS,Z
0004DF: 1535  	JMP                 LoseFrameStatus_RxTxID2_Error  ; RX_IDL ERROR
0004E0: 1163  	CALL                PAGE1BANK1
0004E1: 0428  	MOV                 A,TX2_ID
0004E2: 1160  	CALL                PAGE1BANK0
0004E3: 0367  	XOR                 TX_ID_Buffer,A
0004E4: 0E83  	JBS                 STATUS,Z
0004E5: 1535  	JMP                 LoseFrameStatus_RxTxID2_Error  ; TX_ID ERROR
0004E6: 0000  	NOP
0004E7: 1160  	CALL                PAGE1BANK0                       ; Save data from buffer to local
0004E8: 0428  	MOV                 A,DataA_Buffer
0004E9: 1166  	CALL                PAGE1BANK2
0004EA: 0060  	MOV                 TX2_DATA1,A
0004EB: 1160  	CALL                PAGE1BANK0
0004EC: 0429  	MOV                 A,DataB_Buffer
0004ED: 1166  	CALL                PAGE1BANK2
0004EE: 0061  	MOV                 TX2_DATA2,A
0004EF: 1160  	CALL                PAGE1BANK0
0004F0: 042A  	MOV                 A,DataC_Buffer
0004F1: 1166  	CALL                PAGE1BANK2
0004F2: 0062  	MOV                 TX2_DATA3,A
0004F3: 1160  	CALL                PAGE1BANK0
0004F4: 042B  	MOV                 A,DataD_Buffer
0004F5: 1166  	CALL                PAGE1BANK2
0004F6: 0063  	MOV                 TX2_DATA4,A
0004F7: 1160  	CALL                PAGE1BANK0
0004F8: 042C  	MOV                 A,DataE_Buffer
0004F9: 1166  	CALL                PAGE1BANK2
0004FA: 0064  	MOV                 TX2_DATA5,A
0004FB: 1160  	CALL                PAGE1BANK0
0004FC: 042D  	MOV                 A,DataF_Buffer
0004FD: 1166  	CALL                PAGE1BANK2
0004FE: 0065  	MOV                 TX2_DATA6,A
0004FF: 1160  	CALL                PAGE1BANK0
000500: 042E  	MOV                 A,DataG_Buffer
000501: 1166  	CALL                PAGE1BANK2
000502: 0066  	MOV                 TX2_DATA7,A
000503: 1160  	CALL                PAGE1BANK0
000504: 042F  	MOV                 A,CMOS_xAxisL_Buffer
000505: 1166  	CALL                PAGE1BANK2
000506: 0071  	MOV                 TX2_CMOS_xAxisL,A          ; CMOS x Axis low byte
000507: 1160  	CALL                PAGE1BANK0
000508: 0430  	MOV                 A,CMOS_yAxisL_Buffer
000509: 1166  	CALL                PAGE1BANK2
00050A: 0073  	MOV                 TX2_CMOS_yAxisL,A          ; CMOS y Axis low byte
00050B: 1160  	CALL                PAGE1BANK0
00050C: 0431  	MOV                 A,CMOS_yxsAxisH_Buffer
00050D: 1166  	CALL                PAGE1BANK2
00050E: 0074  	MOV                 TX2_CMOS_yxsAxisH,A        ; CMOS point size low byte
00050F: 1160  	CALL                PAGE1BANK0
000510: 0432  	MOV                 A,GS_xAxisL_Buffer
000511: 1166  	CALL                PAGE1BANK2
000512: 0076  	MOV                 TX2_GS_xAxisL,A            ; GS x Axis low byte
000513: 1160  	CALL                PAGE1BANK0
000514: 0433  	MOV                 A,GS_yAxisL_Buffer
000515: 1166  	CALL                PAGE1BANK2
000516: 0078  	MOV                 TX2_GS_yAxisL,A            ; GS y Axis low byte
000517: 1160  	CALL                PAGE1BANK0
000518: 0434  	MOV                 A,GS_zAxisL_Buffer
000519: 1166  	CALL                PAGE1BANK2
00051A: 007A  	MOV                 TX2_GS_zAxisL,A            ; GS z Axis low byte
00051B: 1160  	CALL                PAGE1BANK0
00051C: 0435  	MOV                 A,GS_xyzAxisH_Buffer
00051D: 1166  	CALL                PAGE1BANK2
00051E: 007B  	MOV                 TX2_GS_xyzAxisH,A          ; GS z Axis high byte
00051F: 1163  	CALL                PAGE1BANK1
000520: 0A63  	BS                  CHN_FLAG,RX2
000521: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
000522: 154E  	JMP                 EP1_REPORT_RX2
000523: 0C73  	JBC                 CHN_FLAG_TEMP,RX2             ; CHN_FLAG rising edge
000524: 1555  	JMP                 Clear_RX2_LossframeCNT
000525: 08C9  	BC                  LED1_STATUS/8,LED1_STATUS%8   ;
000526: 00D7  	CLR                 SystemTimeCNT
000527: 1555  	JMP                 Clear_RX2_LossframeCNT
000528: 0000  	NOP
000529: 0000  	NOP
00052A: 1163  	CALL                PAGE1BANK1
00052B: 0E63  	JBS                 CHN_FLAG,RX2                              ; Lossframe Status
00052C: 1555  	JMP                 Clear_RX2_LossframeCNT                    ; if not SearchStatus,it must be in NormalStatus
00052D: 043B  	MOV                 A,RX2_LossframeCNT                        ; result = constant - variable
00052E: 1D01  	SUB                 A,@RX2_LossframeSum                       ;   | result > 0   c=1  variable less than constant
00052F: 0C03  	JBC                 STATUS,C	                              ;   | result < 0   c=0  variable more than constant
000530: 1541  	JMP                 Increase_RX2_LossframeCNT
000531: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
000532: 0863  	BC                  CHN_FLAG,RX2
000533: 1555  	JMP                 Clear_RX2_LossframeCNT
000534: 0000  	NOP
000535: 0000  	NOP
000536: 1163  	CALL                PAGE1BANK1
000537: 0E63  	JBS                 CHN_FLAG,RX2
000538: 1555  	JMP                 Clear_RX2_LossframeCNT
000539: 043B  	MOV                 A,RX2_LossframeCNT                       ; RX2_LossframeSum times lossframe
00053A: 1D01  	SUB                 A,@RX2_LossframeSum
00053B: 0C03  	JBC                 STATUS,C
00053C: 1541  	JMP                 Increase_RX2_LossframeCNT
00053D: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
00053E: 0863  	BC                  CHN_FLAG,RX2
00053F: 1555  	JMP                 Clear_RX2_LossframeCNT
000540: 0000  	NOP
000541: 0000  	NOP
000542: 057B  	INC                 RX2_LossframeCNT
000543: 1801  	MOV                 A,@RX2
000544: 0070  	MOV                 EP1_ReportID,A
000545: 0BC3  	PAGE                4
000546: 0983  	          BC        0X03,6
000547: 0943  	          BC        0X03,5
000548: 1316  	CALL                EP1_Report_Default
000549: 09C3  	PAGE                1
00054A: 0983  	          BC        0X03,6
00054B: 0B43  	          BS        0X03,5
00054C: 1556  	JMP                 RX2_Over_Judge
00054D: 0000  	NOP
00054E: 0BC3  	PAGE                4
00054F: 0983  	          BC        0X03,6
000550: 0943  	          BC        0X03,5
000551: 133E  	CALL                EP1_Report_2nd
000552: 09C3  	PAGE                1
000553: 0983  	          BC        0X03,6
000554: 0B43  	          BS        0X03,5
000555: 00FB  	CLR                 RX2_LossframeCNT
000556: 041B  	MOV                 A,ComuClock                  ; ComuClock == 4 will continue
000557: 1D07  	SUB                 A,@7
000558: 0C03  	JBC                 STATUS,C
000559: 1556  	JMP                 $-3
00055A: 0B06  	BS                  SPI_SS/8,SPI_SS%8          ; Dissable RF
00055B: 0000  	NOP
00055C: 0012  	RET
00055D: 0000  	NOP
00055E: 0012  	RET
00055F: 0012  	RET
000560: 09C4  		BC              0X04,7
000561: 0984  		BC              0X04,6
000562: 0012  	RET
000563: 09C4  		BC              0X04,7
000564: 0B84  		BS              0X04,6
000565: 0012  	RET
000566: 0BC4  		BS              0X04,7
000567: 0984  		BC              0X04,6
000568: 0012  	RET
000569: 0BC4  		BS              0X04,7
00056A: 0B84  		BS              0X04,6
00056B: 0012  	RET
000800: 0012  	RET
000801: 0012  	RET
000802: 09C4  		BC              0X04,7
000803: 0984  		BC              0X04,6
000804: 0012  	RET
000805: 09C4  		BC              0X04,7
000806: 0B84  		BS              0X04,6
000807: 0012  	RET
000808: 0BC4  		BS              0X04,7
000809: 0984  		BC              0X04,6
00080A: 0012  	RET
00080B: 0BC4  		BS              0X04,7
00080C: 0B84  		BS              0X04,6
00080D: 0012  	RET
000C00: 0020  		TBL
000C01: 1C12  		RETL	@0X12;01	bLength
000C02: 1C01  		RETL	@0X01;02	bDescriptorType
000C03: 1C10  		RETL	@0X10;03	bcdUSB
000C04: 1C01  		RETL	@0X01;04
000C05: 1C00  		RETL	@0X00;05	bDeviceCalss
000C06: 1C00  		RETL	@0X00;06	bDeviceSubClass
000C07: 1C00  		RETL	@0X00;07	bDeviceProtocol
000C08: 1C08  		RETL	@0X08;08	bMaxPacketSize0 ,MCU point0 byte length
000C09: 1CF3  		RETL	@0XF3;09	idVendor 0X04F3
000C0A: 1C04  		RETL	@0X04;0A
000C0B: 1C13  		RETL	@0X13;0B	idProduct (joystick:0x0f1f)
000C0C: 1C2F  		RETL	@0X2F;0C
000C0D: 1C70  		RETL	@0X70;0D	bcdDevice v1.7.0
000C0E: 1C01  		RETL	@0X01;0E
000C0F: 1C01  		RETL	@0X01;0F	iManufacturer
000C10: 1C02  		RETL	@0X02;10	iProduct
000C11: 1C03  		RETL	@0X03;11	iSerialNumber
000C12: 1C01  		RETL	@0X01;12	bNumConfigurations
000C13: 0020  		TBL
000C14: 1C09  		RETL	@0X09;01	bLength
000C15: 1C02  		RETL	@0X02;02	bDescritorType
000C16: 1C22  		RETL	@0X22;03	wTotalLength
000C17: 1C00  		RETL	@0X00;04
000C18: 1C01  		RETL	@0X01;05	bConfigurationValue
000C19: 1C01  		RETL	@0X01;06	bNumInterfaces
000C1A: 1C00  		RETL	@0X00;07	iConfiguration
000C1B: 1C80  		RETL	@0X80;08	bmAttributes
000C1C: 1C32  		RETL	@0X32;09	bMaxPower ,Imax=100mA
000C1D: 1C09  		RETL	@0X09;0A	bLength
000C1E: 1C04  		RETL	@0X04;0B	bDescriptorType(mouse)
000C1F: 1C00  		RETL	@0X00;0C	bInterfaceNumber
000C20: 1C00  		RETL	@0X00;0D	bAlternateSetting
000C21: 1C01  		RETL	@0X01;0E	bNumEndpoints
000C22: 1C03  		RETL	@0X03;0F	bInterfaceClass (Class:HID)
000C23: 1C01  		RETL	@0X01;10	bInterfaceSubClass (BOOT DEVICE)
000C24: 1C02  		RETL	@0X02;11	bInterfaceProtocol (joystick)
000C25: 1C00  		RETL	@0X00;12	iConfiguration
000C26: 1C09  		RETL	@0X09            ;13    bLength
000C27: 1C21  		RETL	@0X21            ;14    bDescriptorType
000C28: 1C10  		RETL	@0X10            ;15    bcdHID
000C29: 1C01  		RETL	@0X01            ;16
000C2A: 1C21  		RETL	@0X21            ;17    bCountryCode
000C2B: 1C01  		RETL	@0X01            ;18    bNumDescriptors
000C2C: 1C22  		RETL	@0X22            ;19    bDescriptorType. report descriptor:0x22, physics descriptor:0x23
000C2D: 1C3E  		RETL	@(End_HID_Report_Table1-Begin_HID_Report_Table1)+(End_HID_Report_Table2-Begin_HID_Report_Table2)+(End_HID_Report_Table3-Begin_HID_Report_Table3)
000C2E: 1C00  		RETL	@0X00            ;1B    ;0X01
000C2F: 1C07  		RETL	@0X07;1C	bLength
000C30: 1C05  		RETL	@0X05;1D	bDescriptorType
000C31: 1C81  		RETL	@0X81;1E	bEndpointAddress
000C32: 1C03  		RETL	@0X03;1F	bmAttributes
000C33: 1C08  		RETL	@0X08;20	wMaxPackerSize
000C34: 1C00  		RETL	@0X00;21
000C35: 1C05  		RETL	@0X05;22	bInterval    ;change 20ms
000C36: 0020  		TBL
000C37: 1C04  		RETL	@0X04;01	bLength
000C38: 1C03  		RETL	@0X03;02	bdescriptorType
000C39: 1C09  		RETL	@0X09;03
000C3A: 1C04  		RETL	@0X04;04	END OF LANGUAGES
000D00: 0020  	TBL
000D01: 1C05  	RETL @0X05    ;USAGE PAGE
000D02: 1C01  	RETL @0X01    ;(GENERIC DESKTOP CONTROL)
000D03: 1C09  	RETL @0X09    ;USAGE
000D04: 1C02  	RETL @0X02    ;(Mouse)
000D05: 1CA1  		RETL @0XA1    ;COLLECTION
000D06: 1C01  		RETL @0X01    ;(APPLICATION)
000D07: 1C05  			RETL @0X05    ;USAGE_PAGE
000D08: 1C09  			RETL @0X09    ;(Button)
000D09: 1C19  			RETL @0X19    ;USAGE MINIMUN
000D0A: 1C01  			RETL @0X01    ;(BUTTON 1)
000D0B: 1C29  			RETL @0X29    ;USAGE MAXIMUM
000D0C: 1C03  			RETL @0X03    ;(BUTTON 3)
000D0D: 1C15  			RETL @0X15    ;LOGICAL MINMUM
000D0E: 1C00  			RETL @0X00    ;(0)
000D0F: 1C25  			RETL @0X25    ;LOGICAL MAXIMUM
000D10: 1C01  			RETL @0X01    ;(1)
000D11: 1C75  			RETL @0X75    ;REPORT_SIZE
000D12: 1C01  			RETL @0X01    ;(1)
000D13: 1C95  			RETL @0X95    ;REPORT_COUNT
000D14: 1C03  			RETL @0X03    ;(03)
000D15: 1C81  			RETL @0X81    ;INPUT
000D16: 1C02  			RETL @0X02    ;(Data Ary,Abs)
000D17: 1C75  			RETL @0X75    ;REPORT_SIZE
000D18: 1C05  			RETL @0X05    ;(5)
000D19: 1C95  			RETL @0X95    ;REPORT_COUNT
000D1A: 1C01  			RETL @0X01    ;(15)
000D1B: 1C81     			RETL @0X81    ;INPUT
000D1C: 1C03  			RETL @0X03    ;(Const,Var,Abs)
000D1D: 1C05  		RETL @0X05    ;USAGE PAGE
000D1E: 1C01  		RETL @0X01    ;(GENERIC DESKTOP)
000D1F: 1C09  		RETL @0X09    ;USAGE
000D20: 1C01  		RETL @0X01    ;(Poniter)
000D21: 1CA1  		RETL @0XA1    ;COLLECTION
000D22: 1C00  		RETL @0X00    ;(Physical)
000D23: 1C09  			RETL @0X09    ;USAGE
000D24: 1C30  			RETL @0X30    ;(X)
000D25: 1C09  			RETL @0X09    ;USAGE
000D26: 1C31  			RETL @0X31    ;(Y)
000D27: 1C15  			RETL @0X15    ;LOGICAL_MINIMUN
000D28: 1C81  			RETL @0X81    ;(-127)
000D29: 1C25  			RETL @0X25    ;LOGICAL_MAXIMUM
000D2A: 1C7F  			RETL @0X7F    ;(127)
000D2B: 1C75  			RETL @0X75    ;REPORT_SIZE
000D2C: 1C08  			RETL @0X08    ;(8)
000D2D: 1C95  			RETL @0X95    ;REPORT_COUNT
000D2E: 1C02  			RETL @0X02    ;(2)
000D2F: 1C81  			RETL @0X81    ;INPUT
000D30: 1C06  			RETL @0X06    ;(Data Ary,Rel)
000D31: 1CC0  		RETL @0XC0    ;END COLLECTION
000D32: 1C09  			RETL @0X09    ;USAGE
000D33: 1C38  			RETL @0X38    ;(Wheel)
000D34: 1C15  			RETL @0X15    ;LOGICAL_MINIMUN
000D35: 1C81  			RETL @0X81    ;(-127)
000D36: 1C25  			RETL @0X25    ;LOGICAL_MAXIMUM
000D37: 1C7F  			RETL @0X7F    ;(127)
000D38: 1C75  			RETL @0X75    ;REPORT_SIZE
000D39: 1C08  			RETL @0X08    ;(8)
000D3A: 1C95  			RETL @0X95    ;REPORT_COUNT
000D3B: 1C01  			RETL @0X01    ;(1)
000D3C: 1C81  			RETL @0X81    ;INPUT
000D3D: 1C06  			RETL @0X06    ;(Data Ary,Rel)
000D3E: 1CC0  		RETL @0XC0    ;END COLLECTION
000D3F: 0012  	RET
000D40: 0020  	TBL
000D41: 0012  	RET
000D42: 0020  	TBL
000D43: 0012  	RET
001000: 10EE  	CALL                PAGE4BANK1
001001: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
001002: 1409  	JMP                 KeyType_Scan
001003: 0417  	MOV                 A,SystemTimeCNT
001004: 1DC8  	SUB                 A,@200              ; 200*1ms = 200ms
001005: 0C03  	JBC                 STATUS,C
001006: 1409  	JMP                 KeyType_Scan
001007: 00D7  	CLR                 SystemTimeCNT
001008: 0AC9  	BS                  LED1_STATUS/8,LED1_STATUS%8
001009: 1100  	CALL                ConnectKey_Scan
00100A: 0EDF  	JBS                 KeyScanFinishFlag/8,KeyScanFinishFlag%8
00100B: 141A  	JMP                 Keystoke_No_Press
00100C: 08DF  	BC                  KeyScanFinishFlag/8,KeyScanFinishFlag%8
00100D: 0438  	MOV                 A,KEY_NUM
00100E: 1B02  	XOR                 A,@00000010B
00100F: 0C83  	JBC                 STATUS,Z
001010: 1433  	JMP                 Click_Select
001011: 0438  	MOV                 A,KEY_NUM
001012: 1B03  	XOR                 A,@00000011B
001013: 0C83  	JBC                 STATUS,Z
001014: 1440  	JMP                 Lasting_Press_Select
001015: 0438  	MOV                 A,KEY_NUM
001016: 1B04  	XOR                 A,@00000100B
001017: 0C83  	JBC                 STATUS,Z
001018: 1443  	JMP                 Dblclick_Select
001019: 0000  	NOP
00101A: 0000  	NOP
00101B: 0D1E  	JBC                 LinkModeFlag/8,LinkModeFlag%8
00101C: 14CD  	JMP                 Cycle_Waiting_End
00101D: 10EE  	CALL                PAGE4BANK1
00101E: 0423  	MOV                 A,CHN_FLAG
00101F: 1B03  	XOR                 A,@0b00000011             ; (1-8) Gamepads
001020: 0E83  	JBS                 STATUS,Z
001021: 14CD  	JMP                 Cycle_Waiting_End
001022: 08C9  	BC                  LED1_STATUS/8,LED1_STATUS%8
001023: 09C3  	PAGE                0
001024: 0983                BC        0X03,6
001025: 0943                BC        0X03,5
001026: 1268  	CALL                SearchLinkMode_Set
001027: 0BC3  	PAGE                5
001028: 0983  	          BC        0X03,6
001029: 0B43  	          BS        0X03,5
00102A: 12C1  	CALL                CHANGE_ADDRESS_VALUE
00102B: 0BC3  	PAGE                4
00102C: 0983  	          BC        0X03,6
00102D: 0943  	          BC        0X03,5
00102E: 10EE  	CALL                PAGE4BANK1
00102F: 00E3  	CLR                 CHN_FLAG
001030: 0000  	NOP
001031: 14CD  	JMP                 Cycle_Waiting_End
001032: 0000  	NOP
001033: 0F9E  	JBS                 FccTestModeFlag/8,FccTestModeFlag%8
001034: 143B  	JMP                 Not_Fcc_TestMode
001035: 056F  	INC                 FccFreqIndex
001036: 042F  	MOV                 A,FccFreqIndex
001037: 1D0F  	SUB                 A,@0X0F
001038: 0E03  	JBS                 STATUS,C
001039: 00EF  	CLR                 FccFreqIndex
00103A: 1409  	JMP                 KeyType_Scan
00103B: 00F8  	CLR                 KEY_NUM
00103C: 0F5E  	JBS                 ForceLinkModeFlag/8,ForceLinkModeFlag%8
00103D: 14CD  	JMP                 Cycle_Waiting_End
00103E: 1422  	JMP                 Quit_Recognise_Scan
00103F: 0000  	NOP
001040: 0B9E  	BS                  FccTestModeFlag/8,FccTestModeFlag%8
001041: 14CD  	JMP                 Cycle_Waiting_End
001042: 0000  	NOP
001043: 0004  	WDTC
001044: 0AC9  	BS                  LED1_STATUS/8,LED1_STATUS%8
001045: 10EE  	CALL                PAGE4BANK1
001046: 18D6  	MOV                 A,@RX_IDH_DEFAULT                   ; SYNC ,used default 0X0DB3
001047: 0061  	MOV                 RX_IDH,A
001048: 18AC  	MOV                 A,@RX_IDL_DEFAULT
001049: 0062  	MOV                 RX_IDL,A
00104A: 0BC3  	PAGE                5
00104B: 0983  	          BC        0X03,6
00104C: 0B43  	          BS        0X03,5
00104D: 1276  	CALL                Enter_StandbyII_Mode
00104E: 12C1  	CALL                CHANGE_ADDRESS_VALUE
00104F: 09C3  	PAGE                0
001050: 0983                BC        0X03,6
001051: 0943                BC        0X03,5
001052: 1276  	CALL                SearchForceLinkMode_Set
001053: 1151  	CALL                Rand_ID_Function
001054: 0BC3  	PAGE                4
001055: 0983  	          BC        0X03,6
001056: 0943  	          BC        0X03,5
001057: 0000  	NOP
001058: 0011  	DISI
001059: 0000  	NOP
00105A: 0B06  	BS                  SPI_SS/8,SPI_SS%8                 ; Disable EM198810
00105B: 09C3  	mEWEN                                                   ; Enable
00105C: 0983                BC        0X03,6
00105D: 0943                BC        0X03,5
00105E: 1300  	          CALL      ADDRESS%0X400
00105F: 0BC3  	          BS        0X03,7
001060: 0983  	          BC        0X03,6
001061: 0943  	          BC        0X03,5
001062: 1830          MOV     A,@ewen         ;enable erase/write
001063: 0051          MOV     r_acc1,A
001064: 1809          MOV     A,@9
001065: 09C3                BC        0X03,7
001066: 0983                BC        0X03,6
001067: 0943                BC        0X03,5
001068: 130F  	          CALL      ADDRESS%0X400
001069: 0BC3  	          BS        0X03,7
00106A: 0983  	          BC        0X03,6
00106B: 0943  	          BC        0X03,5
00106C: 0985          BC      AT93C46_CS/8,AT93C46_CS%8          ;load end bit
00106D: 0886          BC      SPI_CLK/8,SPI_CLK%8
00106E: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
00106F: 1800  	MOV                 A,@0X00
001070: 0055  	MOV                 DataAddressInEEPROM,A
001071: 1860  	MOV                 A,@0X60
001072: 0054  	MOV                 DataAddressInMCU,A
001073: 09C4   	mWRITE              DataAddressInEEPROM,@0,DataAddressInMCU,@16
001074: 0984                BC        0X04,6
001075: 0414          MOV     A,DataAddressInMCU    ;写入数据存放的最低地址为0X24（mCU的地址）
001076: 0044          MOV     R4,A                   ;存放数据的间接地址
001077: 1810          MOV     A,@k
001078: 0053          MOV     r_acc3,A               ;写入93C46的字节数
001079: 09C3                BC        0X03,7
00107A: 0983                BC        0X03,6
00107B: 0943                BC        0X03,5
00107C: 1300  	          CALL      ADDRESS%0X400
00107D: 0BC3  	          BS        0X03,7
00107E: 0983  	          BC        0X03,6
00107F: 0943  	          BC        0X03,5
001080: 0803          BC      STATUS,C
001081: 0615          RRCA    DataAddressInEEPROM
001082: 1940          OR      A,@write
001083: 0051          MOV     r_acc1,A               ;高二位为写命令，低六位为地址
001084: 1808          MOV     A,@8                   ;向93C46写一个字节，控制数
001085: 09C3                BC        0X03,7
001086: 0983                BC        0X03,6
001087: 0943                BC        0X03,5
001088: 130F  	          CALL      ADDRESS%0X400
001089: 0BC3  	          BS        0X03,7
00108A: 0983  	          BC        0X03,6
00108B: 0943  	          BC        0X03,5
00108C: 0886          BC      SPI_CLK/8,SPI_CLK%8
00108D: 0E15          JBS     DataAddressInEEPROM,0        ;写入8BIT模式时的地址最低位
00108E: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
00108F: 0C15          JBC     DataAddressInEEPROM,0
001090: 0AC6          BS      SPI_MOSI/8,SPI_MOSI%8
001091: 1492          JMP     $+1
001092: 0A86          BS      SPI_CLK/8,SPI_CLK%8          ;以上为写入OP和ADDRESS
001093: 0555          INC     DataAddressInEEPROM
001094: 0400          MOV     A,R0
001095: 0051          MOV     r_acc1,A      ;装入要写入的数据
001096: 0544          INC     R4
001097: 1808          MOV     A,@8
001098: 09C3                BC        0X03,7
001099: 0983                BC        0X03,6
00109A: 0943                BC        0X03,5
00109B: 130F  	          CALL      ADDRESS%0X400
00109C: 0BC3  	          BS        0X03,7
00109D: 0983  	          BC        0X03,6
00109E: 0943  	          BC        0X03,5
00109F: 14A0          JMP     $+1
0010A0: 0985          BC      AT93C46_CS/8,AT93C46_CS%8
0010A1: 0886          BC      SPI_CLK/8,SPI_CLK%8          ;数据写完，写结束位
0010A2: 08C6          BC      SPI_MOSI/8,SPI_MOSI%8
0010A3: 14A4          JMP     $+1
0010A4: 0A86          BS      SPI_CLK/8,SPI_CLK%8
0010A5: 0B85          BS      AT93C46_CS/8,AT93C46_CS%8          ;完成结束位的写入
0010A6: 0E06          JBS     SPI_MISO/8,SPI_MISO%8
0010A7: 14A6          JMP     $-1
0010A8: 0985          BC      AT93C46_CS/8,AT93C46_CS%8
0010A9: 05D3          DJZ     r_acc3        ;多字节写入控制
0010AA: 1479          JMP     $Write_Data
0010AB: 09C3   	mEWDS                                                   ; disable
0010AC: 0983                BC        0X03,6
0010AD: 0943                BC        0X03,5
0010AE: 1300  	          CALL      ADDRESS%0X400
0010AF: 0BC3  	          BS        0X03,7
0010B0: 0983  	          BC        0X03,6
0010B1: 0943  	          BC        0X03,5
0010B2: 1800          MOV      A,@ewds         ;禁止写和擦除动作
0010B3: 0051          MOV      r_acc1,A
0010B4: 1809          MOV      A,@9
0010B5: 09C3                BC        0X03,7
0010B6: 0983                BC        0X03,6
0010B7: 0943                BC        0X03,5
0010B8: 130F  	          CALL      ADDRESS%0X400
0010B9: 0BC3  	          BS        0X03,7
0010BA: 0983  	          BC        0X03,6
0010BB: 0943  	          BC        0X03,5
0010BC: 0985          BC       AT93C46_CS/8,AT93C46_CS%8
0010BD: 0886          BC       SPI_CLK/8,SPI_CLK%8
0010BE: 08C6          BC       SPI_MOSI/8,SPI_MOSI%8          ;完成使能写操作指令的写入
0010BF: 0985  	BC                  AT93C46_CS/8,AT93C46_CS%8         ; Disable 93C46
0010C0: 0010  	ENI
0010C1: 10EE   	CALL                PAGE4BANK1
0010C2: 00DE  	CLR                 CommuStatusFlag
0010C3: 00E3  	CLR                 CHN_FLAG
0010C4: 00F8  	CLR                 KEY_NUM
0010C5: 00DE  	CLR                 CommuStatusFlag
0010C6: 0A1E  	BS                  SearchStatusFlag/8,SearchStatusFlag%8
0010C7: 0B5E  	BS                  ForceLinkModeFlag/8,ForceLinkModeFlag%8    ;
0010C8: 10EB  	CALL                PAGE4BANK0
0010C9: 0985  	BC                  AT93C46_CS/8,AT93C46_CS%8                  ; Disable 93C46
0010CA: 0B06  	BS                  SPI_SS/8,SPI_SS%8                          ; Disable EM198810
0010CB: 14CD  	JMP                 Cycle_Waiting_End
0010CC: 0000  	NOP
0010CD: 10EE  	CALL                PAGE4BANK1
0010CE: 0417  	MOV                 A,SystemTimeCNT
0010CF: 1DFA  	SUB                 A,@250              ; 200*1ms = 200ms
0010D0: 0E03  	JBS                 STATUS,C
0010D1: 00D7  	CLR                 SystemTimeCNT
0010D2: 0423  	MOV                 A,CHN_FLAG
0010D3: 0073  	MOV                 CHN_FLAG_TEMP,A
0010D4: 10EE  	CALL                PAGE4BANK1
0010D5: 0439  	MOV                 A,RX_ComuLoseCNT
0010D6: 1DC8  	SUB                 A,@RX_ComuLoseCNT_Default
0010D7: 0C03  	JBC                 STATUS,C                  ; t=RX_ComuLoseCNT_Default check one time
0010D8: 14E8  	JMP                 Communicating_CHN_FLAG
0010D9: 00F9  	CLR                 RX_ComuLoseCNT
0010DA: 0423  	MOV                 A,CHN_FLAG
0010DB: 1B00  	XOR                 A,@0B00000000        ; if connect anyone will check niose environment
0010DC: 0E83  	JBS                 STATUS,Z
0010DD: 14E8  	JMP                 Communicating_CHN_FLAG
0010DE: 0BC3  	PAGE                5
0010DF: 0983  	          BC        0X03,6
0010E0: 0B43  	          BS        0X03,5
0010E1: 11AC  	CALL                Reset_RF_FIFO
0010E2: 1276  	CALL                Enter_StandbyII_Mode
0010E3: 12D4  	CALL                RSSI_TEST_FUNCTION
0010E4: 1276  	CALL                Enter_StandbyII_Mode
0010E5: 0BC3  	PAGE                4
0010E6: 0983  	          BC        0X03,6
0010E7: 0943  	          BC        0X03,5
0010E8: 0000   	NOP
0010E9: 0012  	RET
0010EA: 0000  	NOP
0010EB: 09C4  	BC                  0X04,7
0010EC: 0984  	BC                  0X04,6
0010ED: 0012  	RET
0010EE: 09C4  	BC                  0X04,7
0010EF: 0B84  	BS                  0X04,6
0010F0: 0012  	RET
0010F1: 0BC4  	BS                  0X04,7
0010F2: 0984  	BC                  0X04,6
0010F3: 0012  	RET
0010F4: 0BC4  	BS                  0X04,7
0010F5: 0B84  	BS                  0X04,6
0010F6: 0012  	RET
001100: 10EE  	CALL                PAGE4BANK1
001101: 0000  	NOP
001102: 0409  	MOV                 A,Port9                   ; Port9_2
001103: 1A04  	AND                 A,@00000100B
001104: 0050  	MOV                 TEMP,A
001105: 1804  	MOV                 A,@00000100B              ; Bit2
001106: 02F5  	AND                 KeystokeFlag_Befor,A
001107: 0436  	MOV                 A,KeySystemTimeCNT
001108: 1D38  	SUB                 A,@KeyScanTimeCNT_Default        ; 
001109: 0C03  	JBC                 STATUS,C
00110A: 150D  	JMP                 Falling_Edge_Judge
00110B: 0577  	INC                 KeystokeTimeCNT
00110C: 00F6  	CLR                 KeySystemTimeCNT
00110D: 0410  	MOV                 A,TEMP
00110E: 0335  	XOR                 A,KeystokeFlag_Befor      ; bit 3, Check edge
00110F: 0C83  	JBC                 STATUS,Z
001110: 151B  	JMP                 Rising_Edge_Judge         ; no edge occur
001111: 0410  	MOV                 A,TEMP                    ; Falling edge will change
001112: 1B00  	XOR                 A,@00000000B
001113: 0E83  	JBS                 STATUS,Z
001114: 151B  	JMP                 Rising_Edge_Judge         ; no falling edge
001115: 0E5F  	JBS                 KeyScanStatusFlag/8,KeyScanStatusFlag%8        ; scan the first falling edge
001116: 0A38  	BS                  KEY_NUM,0                            ; Will into key scan, Set leader bit
001117: 00F7  	CLR                 KeystokeTimeCNT                      ; press times ,recalculate
001118: 089F  	BC                  KeyStatusFlag/8,KeyStatusFlag%8    ; key status, press(0) or release(1)
001119: 0A5F  	BS                  KeyScanStatusFlag/8,KeyScanStatusFlag%8	     ; into scan key status
00111A: 1527  	JMP                 Edge_Judge_End
00111B: 0410  	MOV                 A,TEMP
00111C: 0335  	XOR                 A,KeystokeFlag_Befor      ; bit 3, Check edge
00111D: 0C83  	JBC                 STATUS,Z
00111E: 1527  	JMP                 Edge_Judge_End
00111F: 0410  	MOV                 A,TEMP                    ; rising edge will change
001120: 1B04  	XOR                 A,@00000100B
001121: 0E83  	JBS                 STATUS,Z
001122: 1527  	JMP                 Edge_Judge_End
001123: 0000  	NOP
001124: 1135  	CALL                KeyStatus_Low_Scan        ; rising edge ,check low level time
001125: 00F7  	CLR                 KeystokeTimeCNT           ; press times ,recalculate
001126: 0A9F  	BS                  KeyStatusFlag/8,KeyStatusFlag%8
001127: 0410  	MOV                 A,TEMP                    ; save currently press key status used for next judge
001128: 0075  	MOV                 KeystokeFlag_Befor,A
001129: 0DF8  	JBC                 KEY_NUM,7                                   ; Count overflow
00112A: 00F8  	CLR                 KEY_NUM
00112B: 0437  	MOV                 A,KeystokeTimeCNT
00112C: 1D46  	SUB                 A,@70                                       ; 70*56ms=3920ms(ComuTime=56ms)
00112D: 0C03  	JBC                 STATUS,C
00112E: 0437  	MOV                 A,KeystokeTimeCNT
00112F: 1B11  	XOR                 A,@17                                       ; 17*56ms=960ms(ComuTime=56ms)
001130: 0E83  	JBS                 STATUS,Z                                    ;
001131: 0012  	RET
001132: 085F  	BC                  KeyScanStatusFlag/8,KeyScanStatusFlag%8	            ; more than 800ms ,EXIT scan status
001133: 0ADF  	BS                  KeyScanFinishFlag/8,KeyScanFinishFlag%8
001134: 0012  	RET
001135: 0437  	MOV                 A,KeystokeTimeCNT
001136: 1D06  	SUB                 A,@6                       ;40*8ms=320ms(ComuTime=8ms)
001137: 0C03  	JBC                 STATUS,C                   ;
001138: 153A  	JMP                 KeyScan_Short_Press	       ;less than 510ms
001139: 153D  	JMP                 KeyScan_Lasting_Press      ;more than 510ms
00113A: 0803  	BC                  STATUS,C
00113B: 06F8  	RLC                 KEY_NUM
00113C: 0012  	RET
00113D: 0A03  	BS                  STATUS,C
00113E: 06F8  	RLC                 KEY_NUM
00113F: 0012  	RET
001150: 0C4C  	JBC                 RC,EP0_BUSY           ;CHECK UDC BUSY OR NOT
001151: 1550  	JMP                 READ_COMMAND
001152: 0FCC  	JBS                 RC,EP0_W              ;CHECK EP0 W HAVE DATA OR NOT
001153: 1550  	JMP                 READ_COMMAND
001154: 098C  	BC                  RC,EP0_R              ;DISABLE UDC READ
001155: 1810  	MOV                 A,@0X10
001156: 004D  	MOV                 RD,A
001157: 00CE  	CLR                 RE                    ;RESET POINTER & COUNTER
001158: 00CD  	CLR                 RD
001159: 040E  	MOV                 A,RE
00115A: 0060  	MOV                 BYTE0,A
00115B: 040E  	MOV                 A,RE
00115C: 0061  	MOV                 BYTE1,A
00115D: 040E  	MOV                 A,RE
00115E: 0062  	MOV                 BYTE2,A
00115F: 040E  	MOV                 A,RE
001160: 0063  	MOV                 BYTE3,A
001161: 040E  	MOV                 A,RE
001162: 0064  	MOV                 BYTE4,A
001163: 040E  	MOV                 A,RE
001164: 0065  	MOV                 BYTE5,A
001165: 040E  	MOV                 A,RE
001166: 0066  	MOV                 BYTE6,A
001167: 040E  	MOV                 A,RE
001168: 0067  	MOV                 BYTE7,A
001169: 1810  	MOV                 A,@0X10
00116A: 004D  	MOV                 RD,A
00116B: 00CE  	CLR                 RE                                             ;RESET POINTER & COUNTER
00116C: 00CD  	CLR                 RD
00116D: 09CC  	BC                  RC,EP0_W                                       ;CLEAR EP0_W
00116E: 08DC  	BC                  SetupDataStageFlag/8,SetupDataStageFlag%8    ;REFRESH EP0_REPORT COMMAND
00116F: 09DC  	BC                  UsbEP0interruptflag/8,UsbEP0interruptflag%8
001170: 0420  	MOV                 A,BYTE0				        ;bmRequestType
001171: 1A60  	AND                 A,@0B01100000
001172: 0C83  	JBC                 STATUS,Z
001173: 1578  	JMP                 STANDARD_DEVICE_REQUESTS	;bmRequestType[6,5]=[0,0]
001174: 1B20  	XOR                 A,@0B00100000
001175: 0C83  	JBC                 STATUS,Z
001176: 15D5  	JMP                 CLASS_SPECIFIC_REQUESTS		;bmRequestType[6,5]=[0,1]    [0,1]
001177: 1597  	JMP                 STALL_STATUS				;bmRequestType[6,5]=[1,0] OR [1,1]
001178: 1806  	MOV                 A,@0B00000110                  ;0X06
001179: 0321  	XOR                 A,BYTE1				        ;bRequest (Request Code)
00117A: 0C83  	JBC                 STATUS,Z
00117B: 157D  	JMP                 GET_DESCRIPTOR
00117C: 1597  	JMP                 STALL_STATUS
00117D: 00D8  	CLR                 TABLE_INDEX
00117E: 0423  	MOV                 A,BYTE3				        ;wValue (Descriptor Type)
00117F: 1A60  	AND                 A,@0B01100000
001180: 0C83  	JBC                 STATUS,Z
001181: 1586  	JMP                 STANDARD_DESCRIPTOR_TYPE	;wValue[6,5]=[0,0]
001182: 1B20  	XOR                 A,@0B00100000
001183: 0C83  	JBC                 STATUS,Z
001184: 158F  	JMP                 CLASS_DESCRIPTOR_TYPE		;wValue[6,5]=[0,1]
001185: 1597  	JMP                 STALL_STATUS				;wValue[6,5]=[1,0] OR [1,1]
001186: 0423  	MOV                 A,BYTE3
001187: 1D03  	SUB                 A,@0X03
001188: 0E03  	JBS                 STATUS,C
001189: 1597  	JMP                 STALL_STATUS
00118A: 0020  	TBL
00118B: 15BD  	JMP                 STRING_SET          ;	3
00118C: 15A2  	JMP                 CONFIG_SET          ;	2
00118D: 159B  	JMP                 DEVICE_SET          ;	1
00118E: 1597  	JMP                 STALL_STATUS        ;	0
00118F: 1821  	MOV                 A,@0X21
001190: 0323  	XOR                 A,BYTE3
001191: 0C83  	JBC                 STATUS,2
001192: 15AA  	JMP                 HID_SET             ; GET HID
001193: 1822  	MOV                 A,@0X22
001194: 0323  	XOR                 A,BYTE3
001195: 0C83  	JBC                 STATUS,2
001196: 15B4  	JMP                 HID_REPORT_SET      ; GET REPORT
001197: 0A0C  	BS                  RC,0
001198: 09CC  	BC                  RC,7
001199: 084F  	BC                  ISR,EP0IF
00119A: 160C  	JMP                 BC_EP0_FLAG
00119B: 00D3  	CLR                 CMD_SELECT
00119C: 1812  	MOV                 A,@0X12
00119D: 0075  	MOV                 DataMaxTable1,A
00119E: 00F6  	CLR                 DataMaxTable2
00119F: 00F7  	CLR                 DataMaxTable3
0011A0: 12D1  	CALL                Set_Table1_Select
0011A1: 15CF  	JMP                 END_DESCRIPTOR
0011A2: 1801  	MOV                 A,@0X01
0011A3: 0053  	MOV                 CMD_SELECT,A
0011A4: 1822  	MOV                 A,@0X22
0011A5: 0075  	MOV                 DataMaxTable1,A
0011A6: 00F6  	CLR                 DataMaxTable2
0011A7: 00F7  	CLR                 DataMaxTable3
0011A8: 12D1  	CALL                Set_Table1_Select
0011A9: 15CF  	JMP                 END_DESCRIPTOR
0011AA: 1801  	MOV                 A,@0X01
0011AB: 0053  	MOV                 CMD_SELECT,A
0011AC: 1812  	MOV                 A,@0X12
0011AD: 0058  	MOV                 TABLE_INDEX,A
0011AE: 1809  	MOV                 A,@0X09
0011AF: 0075  	MOV                 DataMaxTable1,A
0011B0: 00F6  	CLR                 DataMaxTable2
0011B1: 00F7  	CLR                 DataMaxTable3
0011B2: 12D1  	CALL                Set_Table1_Select
0011B3: 15CF  	JMP                 END_DESCRIPTOR
0011B4: 1802  	MOV                 A,@0X02
0011B5: 0053  	MOV                 CMD_SELECT,A
0011B6: 183E  	MOV                 A,@(End_HID_Report_Table1-Begin_HID_Report_Table1)
0011B7: 0075  	MOV                 DataMaxTable1,A
0011B8: 1800  	MOV                 A,@(End_HID_Report_Table2-Begin_HID_Report_Table2)
0011B9: 0076  	MOV                 DataMaxTable2,A
0011BA: 1800  	MOV                 A,@(End_HID_Report_Table3-Begin_HID_Report_Table3)
0011BB: 0077  	MOV                 DataMaxTable3,A
0011BC: 15CF  	JMP                 END_DESCRIPTOR
0011BD: 1800  	MOV                 A,@0X00
0011BE: 0322  	XOR                 A,BYTE2
0011BF: 0C83  	JBC                 STATUS,2
0011C0: 15C5  	JMP                 STRING0
0011C1: 1802  	MOV                 A,@0X02
0011C2: 0322  	XOR                 A,BYTE2
0011C3: 0C83  	JBC                 STATUS,2
0011C4: 15CA  	JMP                 STRING2
0011C5: 1806  	MOV                 A,@0X06
0011C6: 0053  	MOV                 CMD_SELECT,A
0011C7: 1804  	MOV                 A,@0X04
0011C8: 0075  	MOV                 DataMaxTable1,A
0011C9: 15CF  	JMP                 END_DESCRIPTOR
0011CA: 1807  	MOV                 A,@0X07
0011CB: 0053  	MOV                 CMD_SELECT,A
0011CC: 181E  	MOV                 A,@0X1E
0011CD: 0075  	MOV                 DataMaxTable1,A
0011CE: 15CF  	JMP                 END_DESCRIPTOR
0011CF: 0426  	MOV                 A,BYTE6
0011D0: 0073  	MOV                 PC_WANT0,A
0011D1: 0427  	MOV                 A,BYTE7
0011D2: 0074  	MOV                 PC_WANT1,A
0011D3: 0ADC  	BS                  SetupDataStageFlag/8,SetupDataStageFlag%8
0011D4: 160C  	JMP                 BC_EP0_FLAG
0011D5: 1821  	MOV                 A,@0X21
0011D6: 0320  	XOR                 A,BYTE0
0011D7: 0C83  	JBC                 STATUS,Z
0011D8: 15DE  	JMP                 HID_SET_REQUEST
0011D9: 18A1  	MOV                 A,@0XA1
0011DA: 0320  	XOR                 A,BYTE0
0011DB: 0C83  	JBC                 STATUS,Z
0011DC: 15F8  	JMP                 HID_GET_REQUEST
0011DD: 1597  	JMP                 STALL_STATUS
0011DE: 1809  	MOV                 A,@0X09
0011DF: 0321  	XOR                 A,BYTE1
0011E0: 0C83  	JBC                 STATUS,Z
0011E1: 15EB  	JMP                 SET_REPORT
0011E2: 180A  	MOV                 A,@0X0A
0011E3: 0321  	XOR                 A,BYTE1
0011E4: 0C83  	JBC                 STATUS,Z
0011E5: 15EC  	JMP                 SET_IDLE
0011E6: 180B  	MOV                 A,@0X0B
0011E7: 0321  	XOR                 A,BYTE1
0011E8: 0C83  	JBC                 STATUS,Z
0011E9: 15EF  	JMP                 SET_PROTOCOL
0011EA: 1597  	JMP                 STALL_STATUS
0011EB: 15F1  	JMP                 SET_RET
0011EC: 0423  	MOV                 A,BYTE3
0011ED: 0072  	MOV                 IDLE_TEMP,A
0011EE: 15F1  	JMP                 SET_RET
0011EF: 0422  	MOV                 A,BYTE2
0011F0: 0071  	MOV                 PROTOCOL_TEMP,A
0011F1: 00D8  	CLR                 TABLE_INDEX
0011F2: 00F5  	CLR                 DataMaxTable1
0011F3: 00F3  	CLR                 PC_WANT0
0011F4: 00F4  	CLR                 PC_WANT1
0011F5: 0ADC  	BS                  SetupDataStageFlag/8,SetupDataStageFlag%8
0011F6: 0080  	CLRA
0011F7: 160C  	JMP                 BC_EP0_FLAG
0011F8: 0421  	MOV                 A,BYTE1
0011F9: 1D03  	SUB                 A,@0X03
0011FA: 0E03  	JBS                 STATUS,C
0011FB: 1597  	JMP                 STALL_STATUS
0011FC: 0020  	TBL
0011FD: 1604  	JMP                 GET_PROTOCOL     ; BYTE1 = 0X03
0011FE: 1601  	JMP                 GET_IDLE         ; BYTE1 = 0X02
0011FF: 1607  	JMP                 GET_REPORT       ; BYTE1 = 0X01
001200: 1597  	JMP                 STALL_STATUS
001201: 1803  	MOV                 A,@0X03
001202: 0053  	MOV                 CMD_SELECT,A
001203: 1609  	JMP                 GET_RET
001204: 1804  	MOV                 A,@0X04
001205: 0053  	MOV                 CMD_SELECT,A
001206: 1609  	JMP                 GET_RET
001207: 1805  	MOV                 A,@0X05
001208: 0053  	MOV                 CMD_SELECT,A
001209: 1801  	MOV                 A,@0X01
00120A: 0075  	MOV                 DataMaxTable1,A
00120B: 15CF  	JMP                 END_DESCRIPTOR
00120C: 084F  	BC                  ISR,EP0IF
00120D: 09C3  	PAGE                0
00120E: 0983                BC        0X03,6
00120F: 0943                BC        0X03,5
001210: 146E  	JMP                 INT_RET
001211: 0BCC  	BS                  RC,EP0_W          ;Set 1, when MCU will write data to FIFO
001212: 0E4C  	JBS                 RC,EP0_BUSY       ;It is '1' while UDC write/read endpoint0 FIFO
001213: 1616  	JMP                 REPORT_INITIAL
001214: 09CC  	BC                  RC,EP0_W          ;if EP0 busy go back main loop wait for udc non-busy
001215: 0012  	RET
001216: 1810  	MOV                 A,@0X10
001217: 004D  	MOV                 RD,A       ;set to control pointer & counter
001218: 00CE  	CLR                 RE         ;clear pointer & counter
001219: 00CD  	CLR                 RD         ; FIFO adress=base
00121A: 0475  	MOV                 DataMaxTable1,DataMaxTable1
00121B: 0E83  	JBS                 STATUS,Z
00121C: 1623  	JMP                 Load_FIFO_ByteLength	    ;if DataMaxTable1/2/3 = 0  jmp to finish
00121D: 0476  	MOV                 DataMaxTable2,DataMaxTable2
00121E: 0E83  	JBS                 STATUS,Z
00121F: 1623  	JMP                 Load_FIFO_ByteLength
001220: 0477  	MOV                 DataMaxTable3,DataMaxTable3
001221: 0C83  	JBC                 STATUS,Z
001222: 16E9  	JMP                 FINISH
001223: 1808  	MOV                 A,@0X08
001224: 005A  	MOV                 DataByteLength,A
001225: 00CD  	CLR                 RD
001226: 0413  	MOV                 A,CMD_SELECT
001227: 0020  	TBL
001228: 1630  	JMP                 DEVICE_LOOP	;0
001229: 1639  	JMP                 CONFIG_LOOP	;1
00122A: 1642  	JMP                 HID_REPORTL	;2
00122B: 1663  	JMP                 IDLE_LOOP	;3
00122C: 1665  	JMP                 PROTOCOLL	;4
00122D: 1667  	JMP                 REPORT_EP0	;5
00122E: 166E  	JMP                 STRING0L	;6
00122F: 1677  	JMP                 STRING2L	;8
001230: 0418  	MOV                 A,TABLE_INDEX
001231: 09C3  	PAGE                3
001232: 0B83  	          BS        0X03,6
001233: 0B43  	          BS        0X03,5
001234: 1000  	CALL                DEVICE_TABLE
001235: 0BC3  	PAGE                4
001236: 0983  	          BC        0X03,6
001237: 0943  	          BC        0X03,5
001238: 1682  	JMP                 RLOOP
001239: 0418  	MOV                 A,TABLE_INDEX
00123A: 09C3  	PAGE                3
00123B: 0B83  	          BS        0X03,6
00123C: 0B43  	          BS        0X03,5
00123D: 1013  	CALL                CONFIG_TABLE
00123E: 0BC3  	PAGE                4
00123F: 0983  	          BC        0X03,6
001240: 0943  	          BC        0X03,5
001241: 1682  	JMP                 RLOOP
001242: 0D1C  	JBC                 TableSelectFlag1/8,TableSelectFlag1%8
001243: 1648  	JMP                 HID_Table_1st
001244: 0D5C  	JBC                 TableSelectFlag2/8,TableSelectFlag2%8
001245: 1651  	JMP                 HID_Table_2nd
001246: 0D9C  	JBC                 TableSelectFlag3/8,TableSelectFlag3%8
001247: 165A  	JMP                 HID_Table_3rd
001248: 0418  	MOV                 A,TABLE_INDEX
001249: 09C3  	PAGE                3
00124A: 0B83  	          BS        0X03,6
00124B: 0B43  	          BS        0X03,5
00124C: 1100  	CALL                HID_REPORT_TABLE1
00124D: 0BC3  	PAGE                4
00124E: 0983  	          BC        0X03,6
00124F: 0943  	          BC        0X03,5
001250: 1682  	JMP                 RLOOP
001251: 0418  	MOV                 A,TABLE_INDEX
001252: 09C3  	PAGE                3
001253: 0B83  	          BS        0X03,6
001254: 0B43  	          BS        0X03,5
001255: 1140  	CALL                HID_REPORT_TABLE2
001256: 0BC3  	PAGE                4
001257: 0983  	          BC        0X03,6
001258: 0943  	          BC        0X03,5
001259: 1682  	JMP                 RLOOP
00125A: 0418  	MOV                 A,TABLE_INDEX
00125B: 09C3  	PAGE                3
00125C: 0B83  	          BS        0X03,6
00125D: 0B43  	          BS        0X03,5
00125E: 1142  	CALL                HID_REPORT_TABLE3
00125F: 0BC3  	PAGE                4
001260: 0983  	          BC        0X03,6
001261: 0943  	          BC        0X03,5
001262: 1682  	JMP                 RLOOP
001263: 0432  	MOV                 A,IDLE_TEMP
001264: 1682  	JMP                 RLOOP
001265: 0431  	MOV                 A,PROTOCOL_TEMP
001266: 1682  	JMP                 RLOOP
001267: 1810  	MOV                 A,@0X10
001268: 004D  	MOV                 RD,A		;EP0 POINTER&COUNTER
001269: 00CE  	CLR                 RE
00126A: 1800  	MOV                 A,@0X00
00126B: 004D  	MOV                 RD,A		;EP0 FIFO
00126C: 12ED  	CALL                SEND_USB_DATA
00126D: 16E9  	JMP                 FINISH
00126E: 0418  	MOV                 A,TABLE_INDEX
00126F: 09C3  	PAGE                3
001270: 0B83  	          BS        0X03,6
001271: 0B43  	          BS        0X03,5
001272: 1036  	CALL                STRING0T
001273: 0BC3  	PAGE                4
001274: 0983  	          BC        0X03,6
001275: 0943  	          BC        0X03,5
001276: 1682  	JMP                 RLOOP
001277: 1279  	CALL                STRING_SUB
001278: 1682  	JMP                 RLOOP
001279: 0418  	MOV                 A,TABLE_INDEX
00127A: 1D01  	SUB	                A,@0X01
00127B: 0C03  	JBC                 STATUS,C
00127C: 0012  	RET
00127D: 0C18  	JBC                 TABLE_INDEX,0
00127E: 1C02  	RETL                @0X02
00127F: 0618  	RRCA                TABLE_INDEX
001280: 1F02  	ADD                 A,@0X02
001281: 0012  	RET
001282: 004E  	MOV                 RE,A
001283: 0558  	INC                 TABLE_INDEX
001284: 01F3  	DEC                 PC_WANT0
001285: 0473  	MOV                 PC_WANT0,PC_WANT0
001286: 0C83  	JBC                 STATUS,Z
001287: 16BE  	JMP                 Null_Data                 ;PC_WANT0 null data
001288: 0477  	MOV                 DataMaxTable3,DataMaxTable3
001289: 0E83  	JBS                 STATUS,Z
00128A: 1691  	JMP                 Continue_Fill_In_8Byte
00128B: 0476  	MOV                 DataMaxTable2,DataMaxTable2
00128C: 0E83  	JBS                 STATUS,Z
00128D: 1691  	JMP                 Continue_Fill_In_8Byte
00128E: 0475  	MOV                 DataMaxTable1,DataMaxTable1
00128F: 0C83  	JBC                 STATUS,Z
001290: 16E9  	JMP                 FINISH
001291: 05DA  	DJZ                 DataByteLength
001292: 169B  	JMP                 Fill_In_8Byte_Cycle
001293: 0D9C  	JBC                 TableSelectFlag3/8,TableSelectFlag3%8
001294: 01F7  	DEC                 DataMaxTable3
001295: 0D5C  	JBC                 TableSelectFlag2/8,TableSelectFlag2%8
001296: 01F6  	DEC                 DataMaxTable2
001297: 0D1C  	JBC                 TableSelectFlag1/8,TableSelectFlag1%8
001298: 01F5  	DEC                 DataMaxTable1
001299: 12C7  	CALL                Set_Table_Select
00129A: 16C3  	JMP                 END_Fill_In_8Byte_Cycle   ;8 byte full , End this cycle
00129B: 0D9C  	JBC                 TableSelectFlag3/8,TableSelectFlag3%8
00129C: 01F7  	DEC                 DataMaxTable3
00129D: 0D5C  	JBC                 TableSelectFlag2/8,TableSelectFlag2%8
00129E: 01F6  	DEC                 DataMaxTable2
00129F: 0D1C  	JBC                 TableSelectFlag1/8,TableSelectFlag1%8
0012A0: 01F5  	DEC                 DataMaxTable1
0012A1: 12C7  	CALL                Set_Table_Select
0012A2: 0477  	MOV                 DataMaxTable3,DataMaxTable3
0012A3: 0E83  	JBS                 STATUS,Z
0012A4: 16AC  	JMP                 HID_NOT_END
0012A5: 0476  	MOV                 DataMaxTable2,DataMaxTable2
0012A6: 0E83  	JBS                 STATUS,Z
0012A7: 16AC  	JMP                 HID_NOT_END
0012A8: 0475  	MOV                 DataMaxTable1,DataMaxTable1
0012A9: 0E83  	JBS                 STATUS,Z
0012AA: 16AC  	JMP                 HID_NOT_END
0012AB: 16C3  	JMP                 END_Fill_In_8Byte_Cycle
0012AC: 0D1C  	JBC                 TableSelectFlag1/8,TableSelectFlag1%8
0012AD: 16B2  	JMP                 Table1_Sel
0012AE: 0D5C  	JBC                 TableSelectFlag2/8,TableSelectFlag2%8
0012AF: 16B6  	JMP                 Table2_Sel
0012B0: 0D9C  	JBC                 TableSelectFlag3/8,TableSelectFlag3%8
0012B1: 16BA  	JMP                 Table3_Sel
0012B2: 0475  	MOV                 DataMaxTable1,DataMaxTable1
0012B3: 0C83  	JBC                 STATUS,Z
0012B4: 16E9  	JMP                 FINISH
0012B5: 1626  	JMP                 REPORT_LOOP
0012B6: 0476  	MOV                 DataMaxTable2,DataMaxTable2
0012B7: 0C83  	JBC                 STATUS,Z
0012B8: 16E9  	JMP                 FINISH
0012B9: 1626  	JMP                 REPORT_LOOP
0012BA: 0477  	MOV                 DataMaxTable3,DataMaxTable3
0012BB: 0C83  	JBC                 STATUS,Z
0012BC: 16E9  	JMP                 FINISH
0012BD: 1626  	JMP                 REPORT_LOOP
0012BE: 0434  	MOV                 A,PC_WANT1
0012BF: 0C83  	JBC                 STATUS,Z
0012C0: 16E9  	JMP                 FINISH
0012C1: 01F4  	DEC                 PC_WANT1
0012C2: 1688  	JMP                 To_Continue
0012C3: 0000  	NOP
0012C4: 09CC  	BC                  RC,7
0012C5: 0B8C  	BS                  RC,6
0012C6: 0012  	RET
0012C7: 0477  	MOV                 DataMaxTable3,DataMaxTable3
0012C8: 0E83  	JBS                 STATUS,Z
0012C9: 12E1  	CALL                Set_Table3_Select
0012CA: 0476  	MOV                 DataMaxTable2,DataMaxTable2
0012CB: 0E83  	JBS                 STATUS,Z
0012CC: 12D9  	CALL                Set_Table2_Select
0012CD: 0475  	MOV                 DataMaxTable1,DataMaxTable1
0012CE: 0E83  	JBS                 STATUS,Z
0012CF: 12D1  	CALL                Set_Table1_Select
0012D0: 0012  	RET
0012D1: 0B1C  	BS                  TableSelectFlag1/8,TableSelectFlag1%8
0012D2: 095C  	BC                  TableSelectFlag2/8,TableSelectFlag2%8
0012D3: 099C  	BC                  TableSelectFlag3/8,TableSelectFlag3%8
0012D4: 0418  	MOV                 A,TABLE_INDEX         ;table max mustn't at 8*N,or it will error
0012D5: 1B00  	XOR                 A,@(End_HID_Report_Table3-Begin_HID_Report_Table3)
0012D6: 0C83  	JBC                 STATUS,Z
0012D7: 00D8  	CLR                 TABLE_INDEX
0012D8: 0012  	RET
0012D9: 091C  	BC                  TableSelectFlag1/8,TableSelectFlag1%8
0012DA: 0B5C  	BS                  TableSelectFlag2/8,TableSelectFlag2%8
0012DB: 099C  	BC                  TableSelectFlag3/8,TableSelectFlag3%8
0012DC: 0418  	MOV                 A,TABLE_INDEX         ;table max mustn't at 8*N,or it will error
0012DD: 1B00  	XOR                 A,@(End_HID_Report_Table3-Begin_HID_Report_Table3)
0012DE: 0C83  	JBC                 STATUS,Z
0012DF: 00D8  	CLR                 TABLE_INDEX
0012E0: 0012  	RET
0012E1: 091C  	BC                  TableSelectFlag1/8,TableSelectFlag1%8
0012E2: 095C  	BC                  TableSelectFlag2/8,TableSelectFlag2%8
0012E3: 0B9C  	BS                  TableSelectFlag3/8,TableSelectFlag3%8
0012E4: 0418  	MOV                 A,TABLE_INDEX         ;table max mustn't at 8*N,or it will error
0012E5: 1B00  	XOR                 A,@(End_HID_Report_Table3-Begin_HID_Report_Table3)
0012E6: 0C83  	JBC                 STATUS,Z
0012E7: 00D8  	CLR                 TABLE_INDEX
0012E8: 0012  	RET
0012E9: 09CC  	BC                  RC,7
0012EA: 0B8C  	BS                  RC,6
0012EB: 08DC  	BC                  SetupDataStageFlag/8,SetupDataStageFlag%8
0012EC: 0012  	RET
0012ED: 1801  	MOV                 A,@0X01
0012EE: 004E  	MOV                 RE,A			;BYTE1(BTM)
0012EF: 187F  	MOV                 A,@0X7F
0012F0: 004E  	MOV                 RE,A			;BYTE2(X)
0012F1: 004E  	MOV                 RE,A			;BYTE3(Y)
0012F2: 004E  	MOV                 RE,A			;BYTE4
0012F3: 004E  	MOV                 RE,A			;BYTE5
0012F4: 183F  	MOV                 A,@0X3F
0012F5: 004E  	MOV                 RE,A			;BYTE6(X)
0012F6: 1800  	MOV                 A,@0X00
0012F7: 004E  	MOV                 RE,A			;BYTE7(X)
0012F8: 004E  	MOV                 RE,A			;BYTE8(X)
0012F9: 0C0D  	JBC                 RD,0		;CHECK EP0 or EP1
0012FA: 0B4C  	BS                  RC,EP1_R
0012FB: 0012  	RET
0012FC: 0DDC  	JBC                 UsbEP0interruptflag/8,UsbEP0interruptflag%8
0012FD: 0012  	RET
0012FE: 08DD  	BC                  USBReportFinishFlag/8,USBReportFinishFlag%8
0012FF: 041B  	MOV                 A,ComuClock    ;8ms
001300: 1D64  	SUB                 A,@100
001301: 0C03  	JBC                 STATUS,C
001302: 170E  	JMP                 Add_TimeCount
001303: 0550  	INC                 TEMP
001304: 00DB  	CLR                 ComuClock
001305: 0410  	MOV                 A,TEMP
001306: 1D0A  	SUB                 A,@10           ;T = 0x10*0X30*ComuClock
001307: 0C03  	JBC                 STATUS,C
001308: 170E  	JMP                 Add_TimeCount
001309: 0000  	NOP
00130A: 00D0  	CLR                 TEMP
00130B: 0BDC  	BS                  UsbEP0interruptflag/8,UsbEP0interruptflag%8
00130C: 0ADD  	BS                  USBReportFinishFlag/8,USBReportFinishFlag%8
00130D: 0012  	RET
00130E: 0000  	NOP
00130F: 10EB  	CALL                PAGE4BANK0
001310: 0D8C  	JBC                 RC,EP0_R       ;EP0 FIFO READED ；it is auto clear by udc and data send out finish
001311: 16FC  	JMP                 USB_MAIN
001312: 0CDC  	JBC                 SetupDataStageFlag/8,SetupDataStageFlag%8    ;CHECK SETUP TRANSFER DATA STAGE
001313: 1211  	CALL                EP0_REPORT
001314: 0000  	NOP
001315: 16FC  	JMP                 USB_MAIN
001316: 0000  	NOP
001317: 10F4  	CALL                PAGE4BANK3
001318: 0D4C  	JBC                 RC,EP1_R    ;CHECK EP1 DATA HAS BEEN READED BY HOST
001319: 0012  	RET
00131A: 094C  	BC                  RC,EP1_R
00131B: 1811  	MOV                 A,@0X11
00131C: 004D  	MOV                 RD,A		;EP1 POINTER&COUNTER
00131D: 00CE  	CLR                 RE
00131E: 1801  	MOV                 A,@0X01
00131F: 004D  	MOV                 RD,A        ;EP1 FIFO
001320: 1800  	MOV                 A,@0x00
001321: 004E  	MOV                 RE,A             ;BYTE1 (buttom)
001322: 1800  	MOV                 A,@0x00
001323: 004E  	MOV                 RE,A             ;BYTE2 (LX)
001324: 004E  	MOV                 RE,A             ;BYTE3 (LY)
001325: 1800  	MOV                 A,@0x00
001326: 004E  	MOV                 RE,A             ;BYTE8 (roll)
001327: 0B4C  	BS                  RC,EP1_R
001328: 0000  	NOP
001329: 0012  	RET
00132A: 0000  	NOP
00132B: 10F1  	CALL                PAGE4BANK2
00132C: 0D4C  	JBC                 RC,EP1_R         ;CHECK EP1 DATA HAS BEEN READED BY HOST
00132D: 0012  	RET
00132E: 094C  	BC                  RC,EP1_R
00132F: 1811  	MOV                 A,@0X11
001330: 004D  	MOV                 RD,A		     ;EP1 POINTER&COUNTER
001331: 00CE  	CLR                 RE
001332: 1801  	MOV                 A,@0X01
001333: 004D  	MOV                 RD,A             ;EP1 FIFO
001334: 1800  	MOV                 A,@0x00
001335: 004E  	MOV                 RE,A             ;BYTE1 (buttom)
001336: 0428  	MOV                 A,DataA_Buffer
001337: 004E  	MOV                 RE,A             ;BYTE2 (LX)
001338: 0429  	MOV                 A,DataB_Buffer
001339: 004E  	MOV                 RE,A             ;BYTE3 (LY)
00133A: 1800  	MOV                 A,@0x00
00133B: 004E  	MOV                 RE,A             ;BYTE8 (roll)
00133C: 0B4C  	BS                  RC,EP1_R
00133D: 0012  	RET
00133E: 0000  	NOP
00133F: 10F1  	CALL                PAGE4BANK2
001340: 0D4C  	JBC                 RC,EP1_R    ;CHECK EP1 DATA HAS BEEN READED BY HOST
001341: 0012  	RET
001342: 094C  	BC                  RC,EP1_R
001343: 1811  	MOV                 A,@0X11
001344: 004D  	MOV                 RD,A		;EP1 POINTER&COUNTER
001345: 00CE  	CLR                 RE
001346: 1801  	MOV                 A,@0X01
001347: 004D  	MOV                 RD,A        ;EP1 FIFO
001348: 1800  	MOV                 A,@0x00
001349: 004E  	MOV                 RE,A             ;BYTE1 (buttom)
00134A: 0428  	MOV                 A,DataA_Buffer
00134B: 004E  	MOV                 RE,A             ;BYTE2 (LX)
00134C: 0429  	MOV                 A,DataB_Buffer
00134D: 004E  	MOV                 RE,A             ;BYTE3 (LY)
00134E: 1800  	MOV                 A,@0x00
00134F: 004E  	MOV                 RE,A             ;BYTE8 (roll)
001350: 0B4C  	BS                  RC,EP1_R
001351: 0012  	RET
001400: 03C2  	ADD                 PC,A
001401: 1C4E  	RETL                @0X4E		;1		01---16M
001402: 1C02  	RETL                @0X02		;2		10---24M
001403: 1C4D  	RETL                @0X4D		;3		RESET FIFO
001404: 1C01  	RETL                @0X01		;4
001405: 1C42  	RETL                @0X42		;5		24M/1MBPS
001406: 1C98  	RETL                @0X98		;6
001407: 1C43  	RETL                @0X43		;7
001408: 1CC8  	RETL                @0XC8 		;8		;8		;default:C4  Set sync word length，CRC count
001409: 1C44  	RETL                @0X44		;9		PKT_LEN
00140A: 1C20  	RETL                @PKT_LEN	;10		24 DATA
00140B: 1C45  	RETL                @0X45		;11		PKTCNT
00140C: 1C10  	RETL                @0X10		;12		1 packet
00140D: 1C46  	RETL                @0X46		;13		BIT3~5	TX AMPLIFIER DELAY 10+5X
00140E: 1C09  	RETL                @0X09		;14		BIT0~2	PLL DELAY 120+20X
00140F: 1C47  	RETL                @0X47		;15		BIT4~7  RETRY CNT
001410: 1C01  	RETL                @0X01		;16		BIT0~3	Slot TIME UNIT 10US
001411: 1C48  	RETL                @0X48		;17		Slot
001412: 1C01  	RETL                @0X01		;18
001413: 1C49  	RETL                @0X49		;19		ACKTOSLOT
001414: 1C14  	RETL                @0X14 		;20     default: 0X8A
001415: 1C4A  	RETL                @0X4A		;21		RSSITH
001416: 1C27  	RETL                @0X27		;22
001417: 1C4B  	RETL                @0X4B		;23		RF_RSSI
001418: 1C00  	RETL                @0X00		;24
001419: 1C4C  	RETL                @0X4C		;25		TD_PLL	IN UNIT 10US
00141A: 1C06  	RETL                @0X06		;26
00141B: 1C50  	RETL                @0X50		;27		TXADDR
00141C: 1C00  	RETL                @TXADDRL	;28
00141D: 1C51  	RETL                @0X51		;29		TX ADDR
00141E: 1C11  	RETL                @TXADDRH	;30
00141F: 1C52  	RETL                @0X52		;31		RX	ADDR1
001420: 1C22  	RETL                @0X22		;32
001421: 1C53  	RETL                @0X53		;33		RX	ADDR2
001422: 1C33  	RETL                @0X33		;34
001423: 1C54  	RETL                @0X54		;35		RX	ADDR3
001424: 1C44  	RETL                @0X44		;36
001425: 1C55  	RETL                @0X55		;37		RX	ADDR4
001426: 1C55  	RETL                @0X55		;38
001427: 1C56  	RETL                @0X56		;39		RX	ADDR5
001428: 1C66  	RETL                @0X66		;40
001429: 1C57  	RETL                @0X57		;41		RX	ADDR6
00142A: 1C77  	RETL                @0X77		;42
00142B: 1C58  	RETL                @0X58		;43
00142C: 1C08  	RETL                @0X08		;44
00142D: 1C00  	RETL                @0X00		;45
00142E: 1CE5  	RETL                @0XE5		;46
00142F: 1C01  	RETL                @0X01		;47
001430: 1C84  	RETL                @0X84		;48
001431: 1C02  	RETL                @0X02		;49
001432: 1C00  	RETL                @0X00		;50		CHANNEL
001433: 1C03  	RETL                @0X03		;51
001434: 1CC6  	RETL                @0XC6		;52
001435: 1C04  	RETL                @0X04		;53
001436: 1C00  	RETL                @0X00		;54
001437: 1C05  	RETL                @0X05		;55
001438: 1C40  	RETL                @0X40		;56
001439: 1C06  	RETL                @0X06		;57
00143A: 1C5D  	RETL                @0X5D		;58
00143B: 1C07  	RETL                @0X07		;59
00143C: 1C18  	RETL                @0X18		;60
00143D: 1C08  	RETL                @0X08		;61
00143E: 1C40  	RETL                @0X40		;62
00143F: 1C09  	RETL                @0X09		;63
001440: 1C18  	RETL                @0X18		;64
001441: 1C0A  	RETL                @0X0A		;65
001442: 1C47  	RETL                @0X47		;66
001443: 1C0B  	RETL                @0X0B		;67
001444: 1C0B  	RETL                @0X0B		;68
001445: 1C0C  	RETL                @0X0C		;69
001446: 1CE0  	RETL                @0XE0		;70
001447: 1C0D  	RETL                @0X0D		;71
001448: 1C4F  	RETL                @0X4F		;72
001449: 1C0E  	RETL                @0X0E		;73
00144A: 1C11  	RETL                @0X11		;74
00144B: 1C0F  	RETL                @0X0F		;75
00144C: 1C1C  	RETL                @0X1C		;76
00144D: 1C20  	RETL                @0X20		;77
00144E: 1CAD  	RETL                @0XAD		;78
00144F: 1C21  	RETL                @0X21		;79
001450: 1C64  	RETL                @0X64		;80
001451: 1C22  	RETL                @0X22		;81
001452: 1C00  	RETL                @0X00		;82
001453: 1C23  	RETL                @0X23		;83
001454: 1CC3  	RETL                @0XC3		;84
001455: 1C24  	RETL                @0X24		;85
001456: 1CBD  	RETL                @0XBD		;86
001457: 1C25  	RETL                @0X25		;87
001458: 1CA2  	RETL                @0XA2		;88
001459: 1C26  	RETL                @0X26		;89
00145A: 1C1A  	RETL                @0X1A		;90
00145B: 1C27  	RETL                @0X27		;91
00145C: 1C09  	RETL                @0X09		;92
00145D: 1C28  	RETL                @0X28		;93
00145E: 1C00  	RETL                @0X00		;94
00145F: 1C29  	RETL                @0X29		;95
001460: 1CB8  	RETL                @0XB8		;96
001461: 1C2A  	RETL                @0X2A		;97
001462: 1C71  	RETL                @0X71		;98
001463: 1C2B  	RETL                @0X2B		;99
001464: 1C06  	RETL                @0X06		;100
001465: 1C2C  	RETL                @0X2C		;101
001466: 1C80  	RETL                @0X80		;102
001467: 1C2D  	RETL                @0X2D		;103
001468: 1C1A  	RETL                @0X1A		;104
001469: 1C2E  	RETL                @0X2E		;105
00146A: 1C09  	RETL                @0X09;03		;106
00146B: 1C2F  	RETL                @0X2F		;107
00146C: 1C64  	RETL                @0X64		;108
00146D: 1C30  	RETL                @0X30		;109
00146E: 1CC0  	RETL                @0XC0		;110
00146F: 1C31  	RETL                @0X31		;111
001470: 1C00  	RETL                @0X00		;112
001471: 1C32  	RETL                @0X32		;113
001472: 1C40  	RETL                @0X40		;114
001473: 1C33  	RETL                @0X33		;115
001474: 1C3B  	RETL                @0X3B		;116
001475: 1C00  	RETL                @0X00		;117
001476: 1CA7  	RETL                @0XA7		;118
001477: 1C32  	RETL                @0X32		;119
001478: 1C4A  	RETL                @0X4A		;120
001479: 1C00  	RETL                @0X00		;121
00147A: 1CE5  	RETL                @0XE5		;122
00147B: 1C0E  	RETL                @0X0E		;123
00147C: 1C91  	RETL                @0X91		;124
00147D: 1C40  	RETL                @0X40		;125
00147E: 1C51  	RETL                @0X51		;126
00147F: 1C41  	RETL                @0X41		;127
001480: 1CBF  	RETL                @0XBF		;128
001481: 1C0C  	RETL                @0X0C		;129
001482: 1CC0  	RETL                @0XC0		;130
001483: 1C02  	RETL                @0X02		;131
001484: 1C80  	RETL                @0X80		;132
001485: 1C04  	RETL                @0X04		;133
001486: 1C4A  	RETL                @0X4A		;134
001487: 1C05  	RETL                @0X05		;135
001488: 1CDA  	RETL                @0XDA		;136
001489: 1C06  	RETL                @0X06		;137
00148A: 1CFA  	RETL                @0XFA		;138
00148B: 1CFF  	RETL                @0XFF
00148C: 03C2  	ADD                 PC,A
00148D: 1C4E  	RETL                @0X4E
00148E: 1C02  	RETL                @0X02
00148F: 1C43  	RETL                @0X43
001490: 1CC8  	RETL                @0XC8
001491: 1C44  	RETL                @0X44
001492: 1C20  	RETL                @PKT_LEN
001493: 1C45  	RETL                @0X45
001494: 1C10  	RETL                @0X10
001495: 1C48  	RETL                @0X48
001496: 1C01  	RETL                @0X01
001497: 1C4C  	RETL                @0X4C
001498: 1C06   	RETL                @0X06
001499: 1C50  	RETL                @0X50
00149A: 1C00  	RETL                @TXADDRL
00149B: 1C51  	RETL                @0X51
00149C: 1C11  	RETL                @TXADDRH
00149D: 1C52  	RETL                @0X52
00149E: 1C22  	RETL                @0X22
00149F: 1C53  	RETL                @0X53
0014A0: 1C33  	RETL                @0X33
0014A1: 1C54  	RETL                @0X54
0014A2: 1C44  	RETL                @0X44
0014A3: 1C55  	RETL                @0X55
0014A4: 1C55  	RETL                @0X55
0014A5: 1C56  	RETL                @0X56
0014A6: 1C66  	RETL                @0X66
0014A7: 1C57  	RETL                @0X57
0014A8: 1C77  	RETL                @0X77
0014A9: 1C58  	RETL                @0X58
0014AA: 1C08  	RETL                @0X08
0014AB: 1CFF  	RETL                @0XFF
0014AC: 03C2  	ADD                 PC,A
0014AD: 1C14  	RETL                @20        ;00,Freq:0x14
0014AE: 1C26  	RETL                @38        ;01,Freq:0x26
0014AF: 1C38  	RETL                @56        ;02,Freq:0x38
0014B0: 1C4F  	RETL                @79        ;03,Freq:0x4F
0014B1: 1C04  	RETL                @4         ;04,Freq:0x04
0014B2: 1C17  	RETL                @23        ;05,Freq:0x17
0014B3: 1C2A  	RETL                @42        ;06,Freq:0x2A
0014B4: 1C3D  	RETL                @61        ;07,Freq:0x3D
0014B5: 1C07  	RETL                @7         ;08,Freq:0x07
0014B6: 1C1B  	RETL                @27        ;09,Freq:0x1B
0014B7: 1C2F  	RETL                @47        ;10,Freq:0x2F
0014B8: 1C3E  	RETL                @62        ;11,Freq:0x3E
0014B9: 1C0A  	RETL                @10        ;12,Freq:0x02
0014BA: 1C1F  	RETL                @31        ;13,Freq:0x1F
0014BB: 1C34  	RETL                @52        ;14,Freq:0x34
0014BC: 1C3F  	RETL                @63        ;15,Freq:0x3F
0014BD: 1C0D  	RETL                @13        ;16,Freq:0x0D
0014BE: 1C23  	RETL                @35        ;17,Freq:0x23
0014BF: 1C39  	RETL                @57        ;18,Freq:0x39
0014C0: 1C40  	RETL                @64        ;19,Freq:0x40
0014C1: 1C10  	RETL                @16        ;20,Freq:0x10
0014C2: 1C27  	RETL                @39        ;21,Freq:0x27
0014C3: 1C2B  	RETL                @43        ;22,Freq:0x2B
0014C4: 1C41  	RETL                @65        ;23,Freq:0x41
0014C5: 1C13  	RETL                @19        ;24,Freq:0x13
0014C6: 1C18  	RETL                @24        ;25,Freq:0x18
0014C7: 1C30  	RETL                @48        ;26,Freq:0x30
0014C8: 1C42  	RETL                @66        ;27,Freq:0x42
0014C9: 1C16  	RETL                @22        ;28,Freq:0x16
0014CA: 1C1C  	RETL                @28        ;29,Freq:0x1C
0014CB: 1C35  	RETL                @53        ;30,Freq:0x35
0014CC: 1C43  	RETL                @67        ;31,Freq:0x43
0014CD: 1C06  	RETL                @6         ;32,Freq:0x06
0014CE: 1C20  	RETL                @32        ;33,Freq:0x20
0014CF: 1C3A  	RETL                @58        ;34,Freq:0x3A
0014D0: 1C44  	RETL                @68        ;35,Freq:0x44
0014D1: 1C09  	RETL                @9         ;36,Freq:0x09
0014D2: 1C24  	RETL                @36        ;37,Freq:0x24
0014D3: 1C2C  	RETL                @44        ;38,Freq:0x2C
0014D4: 1C45  	RETL                @69        ;39,Freq:0x45
0014D5: 1C0C  	RETL                @12        ;40,Freq:0x0C
0014D6: 1C28  	RETL                @40        ;41,Freq:0x28
0014D7: 1C31  	RETL                @49        ;42,Freq:0x31
0014D8: 1C46  	RETL                @70        ;43,Freq:0x46
0014D9: 1C0F  	RETL                @15        ;44,Freq:0x0F
0014DA: 1C19  	RETL                @25        ;45,Freq:0x19
0014DB: 1C36  	RETL                @54        ;46,Freq:0x36
0014DC: 1C47  	RETL                @71        ;47,Freq:0x36
0014DD: 1C12  	RETL                @18        ;48,Freq:0x12
0014DE: 1C1D  	RETL                @29        ;49,Freq:0x1D
0014DF: 1C3B  	RETL                @59        ;50,Freq:0x3B
0014E0: 1C48  	RETL                @72        ;51,Freq:0x48
0014E1: 1C15  	RETL                @21        ;52,Freq:0x15
0014E2: 1C21  	RETL                @33        ;53,Freq:0x21
0014E3: 1C2D  	RETL                @45        ;54,Freq:0x2D
0014E4: 1C49  	RETL                @73        ;55,Freq:0x49
0014E5: 1C05  	RETL                @5         ;56,Freq:0x05
0014E6: 1C25  	RETL                @37        ;57,Freq:0x25
0014E7: 1C32  	RETL                @50        ;58,Freq:0x32
0014E8: 1C4A  	RETL                @74        ;59,Freq:0x4A
0014E9: 1C08  	RETL                @8         ;60,Freq:0x08
0014EA: 1C29  	RETL                @41        ;61,Freq:0x29
0014EB: 1C37  	RETL                @55        ;62,Freq:0x37
0014EC: 1C4B  	RETL                @75        ;63,Freq:0x4B
0014ED: 1C0B  	RETL                @11        ;64,Freq:0x03
0014EE: 1C1A  	RETL                @26        ;65,Freq:0x1A
0014EF: 1C3C  	RETL                @60        ;66,Freq:0x3C
0014F0: 1C4C  	RETL                @76        ;67,Freq:0x4C
0014F1: 1C0E  	RETL                @14        ;68,Freq:0x0E
0014F2: 1C1E  	RETL                @30        ;69,Freq:0x1E
0014F3: 1C2E  	RETL                @46        ;70,Freq:0x2E
0014F4: 1C4D  	RETL                @77        ;71,Freq:0x4D
0014F5: 1C11  	RETL                @17        ;72,Freq:0x11
0014F6: 1C22  	RETL                @34        ;73,Freq:0x22
0014F7: 1C33  	RETL                @51        ;74,Freq:0x33
0014F8: 1C4E  	RETL                @78        ;75,Freq:0x4E
0014F9: 1342  	CALL                PAGE5BANK1
0014FA: 0846  	BC                  RESET_N/8,RESET_N%8
0014FB: 181E  	MOV                 A,@30                         ; wating 3ms
0014FC: 12FC  	CALL                DELAY_X100US
0014FD: 0A46  	BS                  RESET_N/8,RESET_N%8          ; RESET=1
0014FE: 1864  	MOV                 A,@100                          ; wating 10ms
0014FF: 12FC  	CALL                DELAY_X100US
001500: 095D  	BC                  RFTestfailFlag/8,RFTestfailFlag%8
001501: 110E  	CALL                INIT_FRAMEREG                  ; load	FRAMER TABLE send
001502: 1805  	MOV                 A,@5
001503: 12FC  	CALL                DELAY_X100US
001504: 0000  	NOP
001505: 1121  	CALL                INIT_RSSI_CALIBRATION
001506: 0000  	NOP
001507: 1304  	CALL                TEST_INITIAL_RF
001508: 0000  	NOP
001509: 0D5D  	JBC                 RFTestfailFlag/8,RFTestfailFlag%8
00150A: 14F9  	JMP                 EM198850_RESET
00150B: 1276  	CALL                Enter_StandbyII_Mode
00150C: 0B9D  	BS                  RFInitialOKflag/8,RFInitialOKflag%8
00150D: 0012  	RET
00150E: 1342  	CALL                PAGE5BANK1
00150F: 00D8  	CLR                 TABLE_INDEX
001510: 0418  	MOV                 A,TABLE_INDEX
001511: 1000  	CALL                FRAME_TABLE
001512: 0070  	MOV                 ADDR,A
001513: 1BFF  	XOR                 A,@0XFF
001514: 0C83  	JBC                 STATUS,Z
001515: 151F  	JMP                 Set_Framereg_End
001516: 0558  	INC                 TABLE_INDEX
001517: 0418  	MOV                 A,TABLE_INDEX
001518: 1000  	CALL                FRAME_TABLE
001519: 0000  	NOP
00151A: 0071  	MOV                 VALUE,A
00151B: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
00151C: 0000  	NOP
00151D: 0558  	INC                 TABLE_INDEX
00151E: 1510  	JMP                 Set_FrameReg
00151F: 0000  	NOP
001520: 0012  	RET
001521: 1342  	CALL                PAGE5BANK1
001522: 1805  	MOV                 A,@0X05
001523: 005A  	MOV                 DataByteLength,A
001524: 00F4  	CLR                 RF_RSSI
001525: 184B  	MOV                 A,@0X4B
001526: 0070  	MOV                 ADDR,A
001527: 1156  	CALL                READ_SPI_REG
001528: 0000  	NOP
001529: 0434  	MOV                 A,RF_RSSI
00152A: 0131  	SUB                 A,VALUE
00152B: 0E03  	JBS                 STATUS,C
00152C: 152F  	JMP                 $+3
00152D: 0431  	MOV                 A,VALUE
00152E: 0074  	MOV                 RF_RSSI,A
00152F: 05DA  	DJZ                 DataByteLength
001530: 1525  	JMP                 Repeat_Read_RSSI
001531: 1804  	MOV                 A,@0X04
001532: 0174  	SUB                 RF_RSSI,A
001533: 0434  	MOV                 A,RF_RSSI
001534: 0071  	MOV                 VALUE,A
001535: 184A  	MOV                 A,@0X4A
001536: 0070  	MOV                 ADDR,A
001537: 114C  	CALL                WRITE_SPI_REG
001538: 0000  	NOP
001539: 1805  	MOV                 A,@0X05
00153A: 0070  	MOV                 ADDR,A
00153B: 1840  	MOV                 A,@0X40
00153C: 0071  	MOV                 VALUE,A
00153D: 114C  	CALL                WRITE_SPI_REG
00153E: 0000  	NOP
00153F: 1802  	MOV                 A,@0X02
001540: 0070  	MOV                 ADDR,A
001541: 1800  	MOV                 A,@0X00
001542: 0071  	MOV                 VALUE,A
001543: 114C  	CALL                WRITE_SPI_REG
001544: 0000  	NOP
001545: 180C  	MOV                 A,@0X0C
001546: 0070  	MOV                 ADDR,A
001547: 18E0  	MOV                 A,@0XE0
001548: 0071  	MOV                 VALUE,A
001549: 114C  	CALL                WRITE_SPI_REG
00154A: 0000  	NOP
00154B: 0012  	RET
00154C: 0906  	BC                  SPI_SS/8,SPI_SS%8				;	/SS	=0
00154D: 1342  	CALL                PAGE5BANK1
00154E: 0430  	MOV                 A,ADDR
00154F: 1162  	CALL                SIM_SPI_WRITE
001550: 0431  	MOV                 A,VALUE
001551: 1162  	CALL                SIM_SPI_WRITE
001552: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
001553: 0000  	NOP
001554: 0B06  	BS                  SPI_SS/8,SPI_SS%8			;	/SS	=1
001555: 0012  	RET
001556: 1342  	CALL                PAGE5BANK1
001557: 0906  	BC                  SPI_SS/8,SPI_SS%8			;	/SS	=0
001558: 0430  	MOV                 A,ADDR
001559: 1980  	OR                  A,@0X80
00155A: 1162  	CALL                SIM_SPI_WRITE
00155B: 0000  	NOP
00155C: 1174  	CALL                SIM_SPI_READ
00155D: 0071  	MOV                 VALUE,A
00155E: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
00155F: 0000  	NOP
001560: 0B06  	BS                  SPI_SS/8,SPI_SS%8			;	/SS	=0
001561: 0012  	RET
001562: 0050  	MOV                 SPIWB,A
001563: 1808  	MOV                 A,@8
001564: 0059  	MOV                 DataShiftCounter,A
001565: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
001566: 06D0  	RLC                 SPIWB
001567: 0C03  	JBC                 STATUS,C
001568: 156B  	JMP                 SET_SPI_MOSI
001569: 08C6  	BC                  SPI_MOSI/8,SPI_MOSI%8
00156A: 156C  	JMP                 WRITE_SPI_COUNT_DEC
00156B: 0AC6  	BS                  SPI_MOSI/8,SPI_MOSI%8
00156C: 0A86  	BS                  SPI_CLK/8,SPI_CLK%8
00156D: 0000  	NOP
00156E: 05D9  	DJZ                 DataShiftCounter
00156F: 1565  	JMP                 WRITE_SPI_1
001570: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
001571: 0000  	NOP
001572: 08C6  	BC                  SPI_MOSI/8,SPI_MOSI%8
001573: 0012  	RET
001574: 00D0  	CLR                 SPIRB
001575: 1808  	MOV                 A,@8
001576: 0059  	MOV                 DataShiftCounter,A
001577: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
001578: 0000  	NOP
001579: 0000  	NOP
00157A: 0000  	NOP
00157B: 0A86  	BS                  SPI_CLK/8,SPI_CLK%8
00157C: 0E06  	JBS                 SPI_MISO/8,SPI_MISO%8
00157D: 1580  	JMP                 CLR_STATUS_C
00157E: 0A03  	BS                  STATUS,C
00157F: 1581  	JMP                 READ_SPI_MISO
001580: 0803  	BC                  STATUS,C
001581: 06D0  	RLC                 SPIRB
001582: 05D9  	DJZ                 DataShiftCounter
001583: 1577  	JMP                 READ_SPI_1
001584: 0886  	BC                  SPI_CLK/8,SPI_CLK%8
001585: 0410  	MOV                 A,SPIRB
001586: 0012  	RET
001587: 1820  	MOV                 A,@RX_BUF					;READ DATA START Address
001588: 0044  	MOV                 RSR,A
001589: 0000  	NOP
00158A: 0000  	NOP
00158B: 0906  	BC                  SPI_SS/8,SPI_SS%8				;/SS=0
00158C: 18FF  	MOV                 A,@0XFF						;0X7F||0X80 FIFO ADDRESS
00158D: 1162  	CALL                SIM_SPI_WRITE
00158E: 0000  	NOP
00158F: 0000  	NOP
001590: 1820  	MOV                 A,@PKT_LEN
001591: 005A  	MOV                 DataByteLength,A
001592: 1174  	CALL                SIM_SPI_READ	 					;Packet & Device	ID
001593: 0040  	MOV                 R0, A
001594: 0544  	INC                 RSR
001595: 05DA  	DJZ                 DataByteLength
001596: 1592  	JMP                 Read_FIFO_Loop
001597: 0000  	NOP
001598: 0B06  	BS                  SPI_SS/8,SPI_SS%8				;/SS=1
001599: 0012  	RET
00159A: 0906  	BC                  SPI_SS/8,SPI_SS%8    ;/SS=1
00159B: 187F  	MOV                 A,@0X7F         ;reg0X7F
00159C: 1162  	CALL                SIM_SPI_WRITE   ;use I/O as	SPI	pro
00159D: 0000  	NOP
00159E: 1820  	MOV                 A,@PKT_LEN
00159F: 005A  	MOV                 DataByteLength,A
0015A0: 1820  	MOV                 A,@TX_BUF       ;Write DATA START Address
0015A1: 0044  	MOV                 RSR,A
0015A2: 0400  	MOV                 A,R0
0015A3: 1162  	CALL                SIM_SPI_WRITE   ;use I/O as	SPI	pro
0015A4: 0000  	NOP
0015A5: 0544  	INC                 RSR
0015A6: 05DA  	DJZ                 DataByteLength
0015A7: 15A2  	JMP                 Write_FIFO_Loop
0015A8: 0B06  	BS                  SPI_SS/8,SPI_SS%8    ;/SS=1
0015A9: 0F86  	JBS                 PKT_FLAG/8,PKT_FLAG%8
0015AA: 15A9  	JMP                 $-1
0015AB: 0012  	RET
0015AC: 1342  	CALL                PAGE5BANK1
0015AD: 184D  	MOV                 A,@0X4D
0015AE: 0070  	MOV                 ADDR,A					;ADDR=0X4D
0015AF: 1801  	MOV                 A,@0X01
0015B0: 0071  	MOV                 VALUE,A
0015B1: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
0015B2: 0000  	NOP
0015B3: 0012  	RET
0015B4: 1342  	CALL                PAGE5BANK1
0015B5: 1800  	MOV                 A,@0X00
0015B6: 0070  	MOV                 ADDR,A
0015B7: 18E5  	MOV                 A,@0XE5
0015B8: 0071  	MOV                 VALUE,A
0015B9: 114C  	CALL                WRITE_SPI_REG
0015BA: 1801  	MOV                 A,@0X01
0015BB: 0070  	MOV                 ADDR,A
0015BC: 1884  	MOV                 A,@0X84
0015BD: 0071  	MOV                 VALUE,A
0015BE: 114C  	CALL                WRITE_SPI_REG
0015BF: 1841  	MOV                 A,@0X41
0015C0: 0070  	MOV                 ADDR,A
0015C1: 18BF  	MOV                 A,@0XBF
0015C2: 0071  	MOV                 VALUE,A
0015C3: 114C  	CALL                WRITE_SPI_REG
0015C4: 1840  	MOV                 A,@0X40
0015C5: 0070  	MOV                 ADDR,A
0015C6: 1856  	MOV                 A,@0X56
0015C7: 0071  	MOV                 VALUE,A
0015C8: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
0015C9: 0012  	RET
0015CA: 1342  	CALL                PAGE5BANK1
0015CB: 1800  	MOV                 A,@0X00
0015CC: 0070  	MOV                 ADDR,A
0015CD: 18E5  	MOV                 A,@0XE5
0015CE: 0071  	MOV                 VALUE,A
0015CF: 114C  	CALL                WRITE_SPI_REG
0015D0: 1801  	MOV                 A,@0X01
0015D1: 0070  	MOV                 ADDR,A
0015D2: 1884  	MOV                 A,@0X84
0015D3: 0071  	MOV                 VALUE,A
0015D4: 114C  	CALL                WRITE_SPI_REG
0015D5: 1841  	MOV                 A,@0X41
0015D6: 0070  	MOV                 ADDR,A
0015D7: 18BF  	MOV                 A,@0XBF
0015D8: 0071  	MOV                 VALUE,A
0015D9: 114C  	CALL                WRITE_SPI_REG
0015DA: 1840  	MOV                 A,@0X40
0015DB: 0070  	MOV                 ADDR,A
0015DC: 1852  	MOV                 A,@0X52
0015DD: 0071  	MOV                 VALUE,A
0015DE: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
0015DF: 0012  	RET
0015E0: 1342  	CALL                PAGE5BANK1
0015E1: 1800  	MOV                 A,@0X00
0015E2: 0070  	MOV                 ADDR,A
0015E3: 1885  	MOV                 A,@0X85
0015E4: 0071  	MOV                 VALUE,A
0015E5: 114C  	CALL                WRITE_SPI_REG
0015E6: 1801  	MOV                 A,@0X01
0015E7: 0070  	MOV                 ADDR,A
0015E8: 1884  	MOV                 A,@0X84
0015E9: 0071  	MOV                 VALUE,A
0015EA: 114C  	CALL                WRITE_SPI_REG
0015EB: 1841  	MOV                 A,@0X41
0015EC: 0070  	MOV                 ADDR,A
0015ED: 18BF  	MOV                 A,@0XBF
0015EE: 0071  	MOV                 VALUE,A
0015EF: 114C  	CALL                WRITE_SPI_REG
0015F0: 1840  	MOV                 A,@0X40
0015F1: 0070  	MOV                 ADDR,A
0015F2: 1856  	MOV                 A,@0X56
0015F3: 0071  	MOV                 VALUE,A
0015F4: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
0015F5: 0012  	RET
0015F6: 1342  	CALL                PAGE5BANK1
0015F7: 1800  	MOV                 A,@0X00
0015F8: 0070  	MOV                 ADDR,A
0015F9: 1885  	MOV                 A,@0X85
0015FA: 0071  	MOV                 VALUE,A
0015FB: 114C  	CALL                WRITE_SPI_REG
0015FC: 1801  	MOV                 A,@0X01
0015FD: 0070  	MOV                 ADDR,A
0015FE: 1884  	MOV                 A,@0X84
0015FF: 0071  	MOV                 VALUE,A
001600: 114C  	CALL                WRITE_SPI_REG
001601: 1841  	MOV                 A,@0X41
001602: 0070  	MOV                 ADDR,A
001603: 18BF  	MOV                 A,@0XBF
001604: 0071  	MOV                 VALUE,A
001605: 114C  	CALL                WRITE_SPI_REG
001606: 1840  	MOV                 A,@0X40
001607: 0070  	MOV                 ADDR,A
001608: 1852  	MOV                 A,@0X52
001609: 0071  	MOV                 VALUE,A
00160A: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
00160B: 0012  	RET
00160C: 1342  	CALL                PAGE5BANK1
00160D: 1800  	MOV                 A,@0X00
00160E: 0070  	MOV                 ADDR,A
00160F: 18E5  	MOV                 A,@0XE5
001610: 0071  	MOV                 VALUE,A
001611: 114C  	CALL                WRITE_SPI_REG
001612: 1801  	MOV                 A,@0X01
001613: 0070  	MOV                 ADDR,A
001614: 1884  	MOV                 A,@0X84
001615: 0071  	MOV                 VALUE,A
001616: 114C  	CALL                WRITE_SPI_REG
001617: 1841  	MOV                 A,@0X41
001618: 0070  	MOV                 ADDR,A
001619: 18BF  	MOV                 A,@0XBF
00161A: 0071  	MOV                 VALUE,A
00161B: 114C  	CALL                WRITE_SPI_REG
00161C: 1840  	MOV                 A,@0X40
00161D: 0070  	MOV                 ADDR,A
00161E: 1859  	MOV                 A,@0X59
00161F: 0071  	MOV                 VALUE,A
001620: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
001621: 0000  	NOP
001622: 0012  	RET
001623: 1342  	CALL                PAGE5BANK1
001624: 1800  	MOV                 A,@0X00
001625: 0070  	MOV                 ADDR,A
001626: 18E5  	MOV                 A,@0XE5
001627: 0071  	MOV                 VALUE,A
001628: 114C  	CALL                WRITE_SPI_REG
001629: 1801  	MOV                 A,@0X01
00162A: 0070  	MOV                 ADDR,A
00162B: 1884  	MOV                 A,@0X84
00162C: 0071  	MOV                 VALUE,A
00162D: 114C  	CALL                WRITE_SPI_REG
00162E: 1841  	MOV                 A,@0X41
00162F: 0070  	MOV                 ADDR,A
001630: 18BF  	MOV                 A,@0XBF
001631: 0071  	MOV                 VALUE,A
001632: 114C  	CALL                WRITE_SPI_REG
001633: 1840  	MOV                 A,@0X40
001634: 0070  	MOV                 ADDR,A
001635: 1851  	MOV                 A,@0X51
001636: 0071  	MOV                 VALUE,A
001637: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
001638: 0012  	RET
001639: 1342  	CALL                PAGE5BANK1
00163A: 1800  	MOV                 A,@0X00
00163B: 0070  	MOV                 ADDR,A
00163C: 1885  	MOV                 A,@0X85
00163D: 0071  	MOV                 VALUE,A
00163E: 114C  	CALL                WRITE_SPI_REG
00163F: 1801  	MOV                 A,@0X01
001640: 0070  	MOV                 ADDR,A
001641: 1884  	MOV                 A,@0X84
001642: 0071  	MOV                 VALUE,A
001643: 114C  	CALL                WRITE_SPI_REG
001644: 1841  	MOV                 A,@0X41
001645: 0070  	MOV                 ADDR,A
001646: 18BF  	MOV                 A,@0XBF
001647: 0071  	MOV                 VALUE,A
001648: 114C  	CALL                WRITE_SPI_REG
001649: 1840  	MOV                 A,@0X40
00164A: 0070  	MOV                 ADDR,A
00164B: 1859  	MOV                 A,@0X59
00164C: 0071  	MOV                 VALUE,A
00164D: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
00164E: 0012  	RET
00164F: 1342  	CALL                PAGE5BANK1
001650: 1800  	MOV                 A,@0X00
001651: 0070  	MOV                 ADDR,A
001652: 1885  	MOV                 A,@0X85
001653: 0071  	MOV                 VALUE,A
001654: 114C  	CALL                WRITE_SPI_REG
001655: 1801  	MOV                 A,@0X01
001656: 0070  	MOV                 ADDR,A
001657: 1884  	MOV                 A,@0X84
001658: 0071  	MOV                 VALUE,A
001659: 114C  	CALL                WRITE_SPI_REG
00165A: 1841  	MOV                 A,@0X41
00165B: 0070  	MOV                 ADDR,A
00165C: 18BF  	MOV                 A,@0XBF
00165D: 0071  	MOV                 VALUE,A
00165E: 114C  	CALL                WRITE_SPI_REG
00165F: 1840  	MOV                 A,@0X40
001660: 0070  	MOV                 ADDR,A
001661: 1851  	MOV                 A,@0X51
001662: 0071  	MOV                 VALUE,A
001663: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
001664: 0012  	RET
001665: 1342  	CALL                PAGE5BANK1
001666: 1800  	MOV                 A,@0X00
001667: 0070  	MOV                 ADDR,A
001668: 1865  	MOV                 A,@0X65
001669: 0071  	MOV                 VALUE,A
00166A: 114C  	CALL                WRITE_SPI_REG
00166B: 1801  	MOV                 A,@0X01
00166C: 0070  	MOV                 ADDR,A
00166D: 188C  	MOV                 A,@0X8C
00166E: 0071  	MOV                 VALUE,A
00166F: 114C  	CALL                WRITE_SPI_REG
001670: 1840  	MOV                 A,@0X40
001671: 0070  	MOV                 ADDR,A
001672: 1850  	MOV                 A,@0X50
001673: 0071  	MOV                 VALUE,A
001674: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
001675: 0012  	RET
001676: 1342  	CALL                PAGE5BANK1
001677: 1800  	MOV                 A,@0X00
001678: 0070  	MOV                 ADDR,A
001679: 18E5  	MOV                 A,@0XE5
00167A: 0071  	MOV                 VALUE,A
00167B: 114C  	CALL                WRITE_SPI_REG
00167C: 1801  	MOV                 A,@0X01
00167D: 0070  	MOV                 ADDR,A
00167E: 1884  	MOV                 A,@0X84
00167F: 0071  	MOV                 VALUE,A
001680: 114C  	CALL                WRITE_SPI_REG
001681: 1841  	MOV                 A,@0X41
001682: 0070  	MOV                 ADDR,A
001683: 1880  	MOV                 A,@0X80
001684: 0071  	MOV                 VALUE,A
001685: 114C  	CALL                WRITE_SPI_REG
001686: 1840  	MOV                 A,@0X40
001687: 0070  	MOV                 ADDR,A
001688: 1852  	MOV                 A,@0X52
001689: 0071  	MOV                 VALUE,A
00168A: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
00168B: 0012  	RET
00168C: 1342  	CALL                PAGE5BANK1
00168D: 1800  	MOV                 A,@0X00
00168E: 0070  	MOV                 ADDR,A
00168F: 18C0  	MOV                 A,@0XC0
001690: 0071  	MOV                 VALUE,A
001691: 114C  	CALL                WRITE_SPI_REG				;send SPI data to EM198810
001692: 1801  	MOV                 A,@0X01
001693: 0070  	MOV                 ADDR,A
001694: 188A  	MOV                 A,@0X8A
001695: 0071  	MOV                 VALUE,A
001696: 114C  	CALL                WRITE_SPI_REG
001697: 133F  	CALL                PAGE5BANK0
001698: 0846  	BC                  RESET_N/8,RESET_N%8
001699: 1342  	CALL                PAGE5BANK1
00169A: 0012  	RET
00169B: 1342  	CALL                PAGE5BANK1
00169C: 1800  	MOV                 A,@0X00
00169D: 0070  	MOV                 ADDR,A
00169E: 18E5  	MOV                 A,@0XE5
00169F: 0071  	MOV                 VALUE,A
0016A0: 114C  	CALL                WRITE_SPI_REG
0016A1: 0000  	NOP
0016A2: 133F  	CALL                PAGE5BANK0
0016A3: 0846  	BC                  RESET_N/8,RESET_N%8
0016A4: 1342  	CALL                PAGE5BANK1
0016A5: 0012  	RET
0016A6: 0A46  	BS                  RESET_N/8,RESET_N%8
0016A7: 1800  	MOV                 A,@0X00
0016A8: 0070  	MOV                 ADDR,A
0016A9: 18E5  	MOV                 A, @0XE5
0016AA: 0071  	MOV                 VALUE,A
0016AB: 114C  	CALL                WRITE_SPI_REG
0016AC: 180F  	MOV                 A,@0X0F
0016AD: 12FC  	CALL                DELAY_X100US
0016AE: 0012  	RET
0016AF: 1342  	CALL                PAGE5BANK1
0016B0: 1802  	MOV                 A,@0X02
0016B1: 0070  	MOV                 ADDR,A
0016B2: 0425  	MOV                 A,CH_NO
0016B3: 10AC  	CALL                CH_TABLE
0016B4: 0071  	MOV                 VALUE,A
0016B5: 114C  	CALL                WRITE_SPI_REG
0016B6: 0012  	RET
0016B7: 184F  	MOV                 A,@0X4F
0016B8: 0070  	MOV                 ADDR,A
0016B9: 1156  	CALL                READ_SPI_REG
0016BA: 0012  	RET
0016BB: 184F  	MOV                 A,@0X4F
0016BC: 0070  	MOV                 ADDR,A
0016BD: 1800  	MOV                 A,@0X00
0016BE: 0071  	MOV                 VALUE,A
0016BF: 114C  	CALL                WRITE_SPI_REG
0016C0: 0012  	RET
0016C1: 1342  	CALL                PAGE5BANK1
0016C2: 1851  	MOV                 A,@0X51
0016C3: 0070  	MOV                 ADDR,A
0016C4: 0421  	MOV                 A,RX_IDH
0016C5: 0071  	MOV                 VALUE,A
0016C6: 114C  	CALL                WRITE_SPI_REG
0016C7: 1853  	MOV                 A,@0X53
0016C8: 0070  	MOV                 ADDR,A
0016C9: 0421  	MOV                 A,RX_IDH
0016CA: 0071  	MOV                 VALUE,A
0016CB: 114C  	CALL                WRITE_SPI_REG
0016CC: 1850  	MOV                 A,@0X50
0016CD: 0070  	MOV                 ADDR,A
0016CE: 0422  	MOV                 A,RX_IDL
0016CF: 0071  	MOV                 VALUE,A
0016D0: 114C  	CALL                WRITE_SPI_REG
0016D1: 0000  	NOP
0016D2: 0012  	RET
0016D3: 0000  	NOP
0016D4: 1223  	CALL                Enter_RX_Buffer_NACK
0016D5: 1804  	MOV                 A,@4
0016D6: 0051  	MOV                 TEMP1,A
0016D7: 00D2  	CLR                 TEMP2
0016D8: 1342  	CALL                PAGE5BANK1
0016D9: 184B  	MOV                 A,@0X4B
0016DA: 0070  	MOV                 ADDR,A
0016DB: 1156  	CALL                READ_SPI_REG
0016DC: 0431  	MOV                 A,VALUE
0016DD: 03D2  	ADD                 TEMP2,A
0016DE: 05D1  	DJZ                 TEMP1
0016DF: 16D8  	JMP                 Scan_Clean_Channel
0016E0: 0652  	RRC                 TEMP2
0016E1: 0612  	RRCA                TEMP2
0016E2: 1D20  	SUB                 A,@NoiseStrobe
0016E3: 0E03  	JBS                 STATUS,C
0016E4: 16F0  	JMP                 Exit_RSSI_Check
0016E5: 1342  	CALL                PAGE5BANK1
0016E6: 0565  	INC                 CH_NO
0016E7: 0425  	MOV                 A,CH_NO
0016E8: 1D4C  	SUB                 A,@ChannelSum
0016E9: 0E03  	JBS                 STATUS,C
0016EA: 00E5  	CLR                 CH_NO
0016EB: 12AF  	CALL                RF_FREQ_SET
0016EC: 1805  	MOV                 A,@5
0016ED: 12FC  	CALL                DELAY_X100US
0016EE: 0000  	NOP
0016EF: 16D8  	JMP                 Scan_Clean_Channel
0016F0: 0000  	NOP
0016F1: 0012  	RET
0016F2: 0000  	NOP
0016F3: 0051  	MOV                 TEMP1,A
0016F4: 1808  	MOV                 A,@8      ;
0016F5: 0052  	MOV                 TEMP2,A
0016F6: 05D2  	DJZ                 TEMP2
0016F7: 16F6  	JMP                 Waiting_X10US
0016F8: 05D1  	DJZ                 TEMP1
0016F9: 16F4  	JMP                 Delay_Loop_X10US
0016FA: 0012  	RET
0016FB: 0000  	NOP
0016FC: 0051  	MOV                 TEMP1,A
0016FD: 1864  	MOV                 A,@100      ;
0016FE: 0052  	MOV                 TEMP2,A
0016FF: 05D2  	DJZ                 TEMP2
001700: 16FF  	JMP                 Waiting_X100US
001701: 05D1  	DJZ                 TEMP1
001702: 16FD  	JMP                 Delay_Loop_X100US
001703: 0012  	RET
001704: 1807  	MOV                 A,@0X07
001705: 0070  	MOV                 ADDR,A
001706: 1858  	MOV                 A,@0X58						;R7[6]=1
001707: 0071  	MOV                 VALUE,A
001708: 114C  	CALL                WRITE_SPI_REG
001709: 0000  	NOP
00170A: 180E  	MOV                 A,@0X0E
00170B: 0070  	MOV                 ADDR,A
00170C: 1811  	MOV                 A,@0X11						;RE[7]=0
00170D: 0071  	MOV                 VALUE,A
00170E: 114C  	CALL                WRITE_SPI_REG
00170F: 0000  	NOP
001710: 182E  	MOV                 A,@0X2E
001711: 0070  	MOV                 ADDR,A
001712: 1823  	MOV                 A,@0X23						;R2E[5]=1
001713: 0071  	MOV                 VALUE,A
001714: 114C  	CALL                WRITE_SPI_REG
001715: 0000  	NOP
001716: 180E  	MOV                 A,@0X0E
001717: 0070  	MOV                 ADDR,A
001718: 1891  	MOV                 A,@0X91						;RE[7]=1
001719: 0071  	MOV                 VALUE,A
00171A: 114C  	CALL                WRITE_SPI_REG
00171B: 0000  	NOP
00171C: 120C  	CALL                Enter_RX_Buffer_ACK
00171D: 0000  	NOP
00171E: 1808  	MOV                 A,@8
00171F: 12FC  	CALL                DELAY_X100US
001720: 0000  	NOP
001721: 184B  	MOV                 A,@0X4B
001722: 0070  	MOV                 ADDR,A
001723: 1156  	CALL                READ_SPI_REG
001724: 0000  	NOP
001725: 0C31  	JBC                 VALUE,0					;R4B[0]:LD=1,Analog Reg Initial is OK
001726: 1729  	JMP                 Digit_Reg_Test
001727: 0B5D  	BS                  RFTestfailFlag/8,RFTestfailFlag%8
001728: 173E  	JMP                 RF_TEST_RET
001729: 00D8  	CLR                 TABLE_INDEX
00172A: 0418  	MOV                 A,TABLE_INDEX
00172B: 108C  	CALL                RF_TABLE
00172C: 0000  	NOP
00172D: 0070  	MOV                 ADDR,A
00172E: 1BFF  	XOR                 A, @0XFF
00172F: 0C83  	JBC                 STATUS,Z
001730: 173E  	JMP                 RF_TEST_RET
001731: 1156  	CALL                READ_SPI_REG
001732: 0000  	NOP
001733: 0558  	INC                 TABLE_INDEX
001734: 0418  	MOV                 A,TABLE_INDEX
001735: 108C  	CALL                RF_TABLE
001736: 0000  	NOP
001737: 0331  	XOR                 A,VALUE
001738: 0C83  	JBC                 STATUS,Z
001739: 173C  	JMP                 RF_TABLE_INC
00173A: 0B5D  	BS                  RFTestfailFlag/8,RFTestfailFlag%8
00173B: 173E  	JMP                 RF_TEST_RET
00173C: 0558  	INC                 TABLE_INDEX
00173D: 172A  	JMP                 Check_Digit_Reg
00173E: 0012  	RET
00173F: 09C4  	BC        0X04,7
001740: 0984  	BC        0X04,6
001741: 0012    RET
001742: 09C4  	BC        0X04,7
001743: 0B84  	BS        0X04,6
001744: 0012    RET
001745: 0BC4  	BS        0X04,7
001746: 0984  	BC        0X04,6
001747: 0012    RET
001748: 0BC4  	BS        0X04,7
001749: 0B84  	BS        0X04,6
00174A: 0012    RET
